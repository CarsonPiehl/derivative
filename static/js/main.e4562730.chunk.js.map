{"version":3,"sources":["reportWebVitals.ts","derivativecomp.tsx","integral.tsx","app.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","fn","graphRoot","riseRoot1","riseRoot2","ballGraph","ballSecantGraph","ballSecantGraph2","graphWidth","window","innerHeight","innerWidth","graphHeight","riseRunOptions1","target","grid","width","height","data","color","vector","offset","graphType","fnType","riseRunOptions2","hOptions","evaluate","x","secants","x0","x1","ballOptions","points","skipTip","nSamples","ballSecantOptions","ballSecantOptions2","basicOptions","tangentOverGraphOptions1","derivative","tangentOverGraphOptions2","round","number","Math","Number","EPSILON","React","Component","HGraph","state","props","toString","h","slope","trueSlope","options","functionPlot","this","newState","Object","assign","rise","setState","err","console","log","mathString","String","id","className","math","block","type","name","min","max","step","defaultValue","onChange","event","changeH","parseFloat","value","changeX","changeFn","RiseRunStatic","x2","onLoad","changeX1","changeX2","RiseRunAntiStatic","BallFunction","tangent","tangentX","tick","on","increment","abs","endX","startX","ticks","turnOn","turnOff","resState","num","reset","tanX","curX","curY","newScatter","i","push","e","requestAnimationFrame","update","bind","changeTanX","BallFunctionSecant","secantDist","point1","point2","newDist","er","changeSecantDist","BasicDiscontinuityGraph","disableZoom","yAxis","domain","xAxis","y","BasicGraph","slice","TangentOverGraph","dX","replace","DerivativeComp","PI","discontinuity","D3TestClass","d3","append","attr","handmadeRiemann","board","method","suspendUpdate","rectWidth","graphFunc","t","sin","cos","create","p1","size","withLabel","fixed","highlight","p2","p3","p4","fillColor","fillOpacity","borders","unsuspendUpdate","Integral","logic","boardAttributes","axis","drag","enabled","boundingbox","registerEvents","style","border","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4562730.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport functionPlot from 'function-plot';\r\nimport {derivative,evaluate} from 'mathjs';\r\nimport 'katex/dist/katex.min.css';\r\nimport TeX from '@matejmazur/react-katex';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nlet fn = 'x*x';\r\nlet h = 5;\r\nlet x = 0;\r\nlet graphRoot = 'hgraph';\r\nlet aGraphRoot = 'agraph';\r\nlet riseRoot1 = 'riseroot1';\r\nlet riseRoot2 = 'riseroot2';\r\nlet ballGraph = 'ball1';\r\nlet ballSecantGraph = 'ballsecant1';\r\nlet ballSecantGraph2 = 'ballsecant2';\r\n\r\nlet height = window.innerHeight;\r\nlet width = window.innerWidth;\r\nlet graphWidth = width * .6;\r\nlet graphHeight = graphWidth * 4/8;\r\n\r\nlet riseRunOptions1 = {\r\n  target: '#' + riseRoot1,\r\n  grid: true,\r\n  width: graphWidth,\r\n  height: graphHeight,\r\n  data: [\r\n    { // function\r\n      fn: '2x',\r\n      color: 'steelblue',\r\n    },\r\n    { // x vector THIS IS ALL HAND TYPED. TODO: FIX\r\n      vector: [10,0],\r\n      offset: [0,0],\r\n      graphType: 'polyline' as 'polyline',\r\n      fnType: 'vector' as 'vector',\r\n    },\r\n    { // y vector\r\n      vector: [0, 20],\r\n      offset: [10, 0],\r\n      graphType: 'polyline' as 'polyline',\r\n      fnType: 'vector' as 'vector',\r\n    },\r\n  ]\r\n}\r\n\r\nlet riseRunOptions2 = {\r\n  target: '#' + riseRoot2,\r\n  grid: true,\r\n  width: graphWidth,\r\n  height: graphHeight,\r\n  data: [\r\n    { // function\r\n      fn: 'x^2',\r\n      color: 'steelblue',\r\n    },\r\n    { // x vector THIS IS ALL HAND TYPED. TODO: FIX\r\n      vector: [2,0],\r\n      offset: [0,0],\r\n      graphType: 'polyline' as 'polyline',\r\n      fnType: 'vector' as 'vector',\r\n    },\r\n    { // y vector\r\n      vector: [0, 4],\r\n      offset: [2, 0],\r\n      graphType: 'polyline' as 'polyline',\r\n      fnType: 'vector' as 'vector',\r\n    },\r\n  ]\r\n}\r\n\r\n\r\nlet aOptions = {\r\n  target: '#' + aGraphRoot,\r\n  grid: true,\r\n  width: 800,\r\n  height: 500,\r\n  data: [\r\n    { // function\r\n      fn: fn,\r\n      secants: [\r\n        {x0: x, x1: x+h},\r\n      ],\r\n      color: 'steelblue',\r\n    },\r\n    { // h vector\r\n      vector: [h,0],\r\n      offset: [x,evaluate(fn,{x:x})],\r\n      graphType: 'polyline' as 'polyline',\r\n      fnType: 'vector' as 'vector',\r\n    },\r\n    { // f(x+h) - f(x) vector\r\n      vector: [0, evaluate(fn,{x:x+h}) - evaluate(fn,{x:x})],\r\n      offset: [x+h, evaluate(fn,{x:x})],\r\n      graphType: 'polyline' as 'polyline',\r\n      fnType: 'vector' as 'vector',\r\n    },\r\n  ]\r\n}\r\n\r\nlet hOptions = {\r\n  target: '#'+graphRoot,\r\n  grid: true,\r\n  width: graphWidth,\r\n  height: graphHeight,\r\n  data: [\r\n    { // function\r\n      fn: fn,\r\n      secants: [\r\n        {x0: x, x1: x+h},\r\n      ],\r\n      color: 'steelblue',\r\n    },\r\n    { // h vector\r\n      vector: [h,0],\r\n      offset: [x,evaluate(fn,{x:x})],\r\n      graphType: 'polyline' as 'polyline',\r\n      fnType: 'vector' as 'vector',\r\n    },\r\n    { // f(x+h) - f(x) vector\r\n      vector: [0, evaluate(fn,{x:x+h}) - evaluate(fn,{x:x})],\r\n      offset: [x+h, evaluate(fn,{x:x})],\r\n      graphType: 'polyline' as 'polyline',\r\n      fnType: 'vector' as 'vector',\r\n    },\r\n  ]\r\n}\r\n\r\nlet ballOptions = {\r\n  target: '#'+ballGraph,\r\n  grid: true,\r\n  width: graphWidth,\r\n  height: graphHeight,\r\n  data: [\r\n    { // ball line\r\n      points: [\r\n\r\n      ],\r\n      graphType: 'polyline' as 'polyline',\r\n      fnType: 'points' as 'points',\r\n    },\r\n    { \r\n      points: [\r\n\r\n      ],\r\n      graphType: 'scatter' as 'scatter',\r\n      fnType: 'points' as 'points',\r\n    },\r\n    {\r\n      fn: 'sin(x)',\r\n      skipTip: true,\r\n      nSamples: 100,\r\n      graphType: 'scatter' as 'scatter',\r\n    }\r\n\r\n  ]\r\n}\r\n\r\nlet ballSecantOptions = {\r\n  target: '#'+ballSecantGraph,\r\n  grid: true,\r\n  width: graphWidth,\r\n  height: graphHeight,\r\n  data: [\r\n    { // ball line\r\n      points: [\r\n\r\n      ],\r\n      graphType: 'polyline' as 'polyline',\r\n      fnType: 'points' as 'points',\r\n    },\r\n    { \r\n      points: [ // Secant indication point\r\n\r\n      ],\r\n      graphType: 'scatter' as 'scatter',\r\n      fnType: 'points' as 'points',\r\n    },\r\n    {\r\n      fn: 'cos(x)',\r\n      skipTip: true,\r\n      nSamples: 100,\r\n      graphType: 'scatter' as 'scatter',\r\n      secants: [\r\n\r\n      ]\r\n    },\r\n    {\r\n      points: [ // Tiny LIne\r\n\r\n      ],\r\n      graphType: 'polyline' as 'polyline',\r\n      fnType: 'points' as 'points',\r\n    }\r\n\r\n  ]\r\n}\r\n\r\nlet ballSecantOptions2 = {\r\n  target: '#'+ballSecantGraph2,\r\n  grid: true,\r\n  width: graphWidth,\r\n  height: graphHeight,\r\n  data: [\r\n    { // ball line\r\n      points: [\r\n\r\n      ],\r\n      graphType: 'polyline' as 'polyline',\r\n      fnType: 'points' as 'points',\r\n    },\r\n    { \r\n      points: [ // Secant indication point\r\n\r\n      ],\r\n      graphType: 'scatter' as 'scatter',\r\n      fnType: 'points' as 'points',\r\n    },\r\n    {\r\n      fn: '2x^2 + 3',\r\n      skipTip: true,\r\n      nSamples: 100,\r\n      graphType: 'scatter' as 'scatter',\r\n      secants: [\r\n\r\n      ]\r\n    },\r\n    {\r\n      points: [ // Tiny Line\r\n\r\n      ],\r\n      graphType: 'polyline' as 'polyline',\r\n      fnType: 'points' as 'points',\r\n    }\r\n\r\n  ]\r\n}\r\n\r\n\r\nlet basicOptions = {\r\n  target: '#basicGraph',\r\n  grid: true,\r\n  width: graphWidth,\r\n  height: graphHeight,\r\n  data: [\r\n    {\r\n      fn: \"4x-4\",\r\n      skipTip: true\r\n    },\r\n    {\r\n      fn: \"x^2\",\r\n      skipTip: true\r\n    },\r\n    { // h vector\r\n      vector: [1,0],\r\n      offset: [2,4],\r\n      graphType: 'polyline' as 'polyline',\r\n      fnType: 'vector' as 'vector',\r\n    },\r\n    { // f(x+h) - f(x) vector\r\n      vector: [0, 4],\r\n      offset: [3, 4],\r\n      graphType: 'polyline' as 'polyline',\r\n      fnType: 'vector' as 'vector',\r\n    },\r\n\r\n  ]\r\n}\r\n\r\nlet tangentOverGraphOptions1 = {\r\n  target: '#tangentOverGraph1',\r\n  grid: true,\r\n  width: graphWidth,\r\n  height: graphHeight,\r\n  data: [\r\n    {\r\n      fn: \"x^2\",\r\n      skipTip: true,\r\n      derivative: {\r\n        fn: \"2*x\",\r\n        x0: 2,\r\n      },\r\n      graphType: 'interval',\r\n\r\n    },\r\n    { // h vector\r\n      vector: [1,0],\r\n      offset: [2,4],\r\n      graphType: 'polyline' as 'polyline',\r\n      fnType: 'vector' as 'vector',\r\n    },\r\n    { // f(x+h) - f(x) vector\r\n      vector: [0, 4],\r\n      offset: [3, 4],\r\n      graphType: 'polyline' as 'polyline',\r\n      fnType: 'vector' as 'vector',\r\n    },\r\n\r\n  ]\r\n\r\n}\r\n\r\nlet tangentOverGraphOptions2 = {\r\n  target: '#tangentOverGraph2',\r\n  grid: true,\r\n  width: graphWidth,\r\n  height: graphHeight,\r\n  data: [\r\n    {\r\n      fn: \"4*x^3-2*x^2-7*x+2\",\r\n      skipTip: true,\r\n      derivative: {\r\n        fn: \"12*x^2 - 4*x - 7\",\r\n        x0: 2,\r\n      },\r\n      graphType: 'interval',\r\n    },\r\n    { // h vector\r\n      vector: [1,0],\r\n      offset: [2,4],\r\n      graphType: 'polyline' as 'polyline',\r\n      fnType: 'vector' as 'vector',\r\n    },\r\n    { // f(x+h) - f(x) vector\r\n      vector: [0, 4],\r\n      offset: [3, 4],\r\n      graphType: 'polyline' as 'polyline',\r\n      fnType: 'vector' as 'vector',\r\n    },\r\n\r\n  ]\r\n\r\n}\r\n\r\n\r\n/*\r\nlet increment = 20/500;\r\nlet bigArray = [];\r\nfor(let i:number = 0; i < 500; i++) {\r\n\r\n  let curX = -10 + i*increment;\r\n  let curY;\r\n  if (curX < 2) {\r\n    curY = evaluate('x^2',{x:curX}) as number;\r\n  }\r\n  else {\r\n    curY = evaluate('4x-4',{x:curX});\r\n  }\r\n  let array = [curX,curY] as number[];\r\n  bigArray.push(array);\r\n}\r\nbasicOptions.data[0].points = bigArray;\r\n*/\r\n\r\n// Number Rounding function\r\nfunction round(number:number) {\r\n  return Math.round((number + Number.EPSILON) * 1000) / 1000;\r\n}\r\n\r\n\r\n\r\n\r\ninterface hGraphProps {\r\n  fn: string,\r\n  h: number,\r\n  x: number,\r\n  graphRoot: string,\r\n  options: any, // this is an admission of defeat and it was totally worth it for not having to figure out how to define an options type\r\n} // Just to clarify, the options prop basically will literally just opt out of typescript\r\n// https://www.typescriptlang.org/docs/handbook/basic-types.html at the any bit'\r\n\r\ninterface aGraphProps {\r\n  fn: string,\r\n  a: number,\r\n  x: number,\r\n  graphRoot: string,\r\n  options: any,\r\n}\r\n\r\ninterface riseRunProps {\r\n  fn: string,\r\n  derivative: string,\r\n  x2: number,\r\n  x1: number,\r\n  graphRoot: string,\r\n  options: any,\r\n}\r\n\r\ninterface ballProps {\r\n  fn: string,\r\n  derivative: string,\r\n  options: any,\r\n  startX: number,\r\n  tangentX: number,\r\n  endX: number,\r\n  ticks: number,\r\n  graphRoot: string,\r\n}\r\n\r\ninterface ballPropsSecant {\r\n  fn: string,\r\n  derivative: string,\r\n  secantDist: number,\r\n  options: any,\r\n  startX: number,\r\n  tangentX: number,\r\n  endX: number,\r\n  ticks: number,\r\n  graphRoot: string,\r\n}\r\n\r\ninterface basicProps {\r\n  options: any,\r\n}\r\n\r\ninterface tangentOverGraphProps {\r\n  options: any,\r\n  tangentX: number,\r\n\r\n}\r\n\r\ninterface discontinuityGraph {\r\n  fn: string,\r\n  discontinuity: number,\r\n  graphRoot: string,\r\n}\r\n\r\n\r\ninterface hGraphState {\r\n  fn: string,\r\n  derivative: string,\r\n  h: number,\r\n  x: number,\r\n  slope: number,\r\n  trueSlope: number,\r\n  graphRoot: string,\r\n  options: any, \r\n}\r\n\r\ninterface aGraphState {\r\n  fn: string,\r\n  derivative: string,\r\n  a: number,\r\n  x: number,\r\n  slope: number,\r\n  trueSlope: number,\r\n  graphRoot: string,\r\n  options: any, \r\n}\r\n\r\ninterface riseRunState {\r\n  fn: string,\r\n  derivative: string,\r\n  x2: number,\r\n  x1: number,\r\n  options: any,\r\n}\r\n\r\ninterface ballState {\r\n  fn: string,\r\n  derivative: string,\r\n  tangent: string,\r\n  tangentX: number,\r\n  options: any,\r\n  tick: number,\r\n  on: boolean,\r\n  increment: number,\r\n}\r\n\r\ninterface ballStateSecant {\r\n  fn: string,\r\n  derivative: string,\r\n  tangent: string,\r\n  secantDist: number,\r\n  tangentX: number,\r\n  options: any,\r\n  tick: number,\r\n  on: boolean,\r\n  increment: number,\r\n}\r\n\r\ninterface latexCarouselState {\r\n  index: number,\r\n}\r\n\r\ninterface latexCarouselProps { // Math and Text list have to be the same length.\r\n  mathList: String[], // Valid LaTex that will be rendered\r\n  textList: String[]  // String describing the LaTex\r\n}\r\n\r\n\r\n\r\nclass AGraph extends React.Component<aGraphProps> {\r\n  public state:aGraphState = { // not your typical constructor, apparently this is the TypeScript way to do state now: https://stackoverflow.com/questions/51074355/cannot-assign-to-state-because-it-is-a-constant-or-a-read-only-property\r\n    fn: this.props.fn,\r\n    derivative: derivative(this.props.fn,'x').toString(),\r\n    a: this.props.a,\r\n    x: this.props.x,\r\n    slope: ((evaluate(this.props.fn,{x : this.props.a}) - evaluate(this.props.fn,{x:this.props.x})) / (this.props.a - this.props.x)),\r\n    trueSlope: evaluate(derivative(this.props.fn,'x').toString(),{x: this.props.x}),\r\n    graphRoot: this.props.graphRoot,\r\n    options: this.props.options,\r\n  }\r\n\r\n  componentDidMount() {\r\n    functionPlot(this.props.options);\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  changeFn(fn: string) {\r\n    try {\r\n      if (fn !== '') {\r\n        let newState = Object.assign({}, this.state);\r\n        let x  = newState.x;\r\n        let a  = newState.a;\r\n        let rise = evaluate(fn,{x:a}) - evaluate(fn,{x:x});\r\n        // Update everything b/c new function\r\n        newState.options.data[0].fn = fn;\r\n        newState.fn = fn;\r\n        newState.derivative = derivative(fn,'x').toString();\r\n        newState.options.data[0].secants[0] = {\r\n          x0: x,\r\n          x1: a,\r\n        }\r\n        newState.options.data[1].vector = [a-x,0];\r\n        newState.options.data[1].offset = [x,evaluate(fn,{x:x})];\r\n        newState.options.data[2].vector = [0, rise];\r\n        newState.options.data[2].offset = [a, evaluate(fn,{x:x})];\r\n        newState.slope = rise / a-x;\r\n        newState.trueSlope = evaluate(newState.derivative, {x:x});\r\n\r\n        this.setState(newState); // I trust  react implicitly about mutation but this seems convoluted. What do I know though?\r\n      }\r\n      functionPlot(this.state.options);\r\n    }\r\n    catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  \r\n  changeA(a: number) {\r\n    let x = this.state.x;\r\n    let fn = this.state.fn;\r\n    let newState = Object.assign({}, this.state); // React does NOT like you mutating the state directly so I have to do this copying monstrosity from SO: https://stackoverflow.com/questions/45557301/how-to-change-the-state-with-react-typescript-2-0\r\n    //let a = parseFloat(slider.value);\r\n    let rise = evaluate(fn,{x:a}) - evaluate(fn,{x:x}); // y1 - y2 convenience var\r\n\r\n    // this.state is decapitated from the namespace here for readability and convenience\r\n\r\n    newState.options.data[1].vector = [a-x,0];\r\n    // no need to change first offset, doesn't have an h val for calculation\r\n    newState.options.data[2].vector = [0, rise];\r\n    newState.options.data[2].offset = [a, evaluate(fn,{x:x})];\r\n    newState.options.data[0].secants[0] = {\r\n      x0: x,\r\n      x1: a,\r\n    }\r\n    newState.slope = rise / (a-x);\r\n    // no need to change true slope, only changes with x\r\n    \r\n    newState.a = a;\r\n    this.setState(newState);\r\n\r\n    functionPlot(this.state.options);\r\n  }\r\n\r\n  changeX(x: number) { // TODO: FINISH UPDATING THIS BIT\r\n    let a = this.state.a;\r\n    let fn = this.state.fn;\r\n    let newState = Object.assign({}, this.state); // React does NOT like you mutating the state directly so I have to do this copying monstrosity from SO: https://stackoverflow.com/questions/45557301/how-to-change-the-state-with-react-typescript-2-0\r\n    //let x = parseFloat(slider.value);\r\n    let rise = evaluate(fn,{x:a}) - evaluate(fn,{x:x}); // y1 - y2 convenience var\r\n    // Again this.state is decapitated from the namespace here for readability and convenience\r\n\r\n\r\n    // no need to change first vector, doesn't use x\r\n    newState.options.data[1].offset = [x,evaluate(fn,{x:x})];\r\n    newState.options.data[1].vector = [a-x,0]\r\n    newState.options.data[2].vector = [0, rise];\r\n    newState.options.data[2].offset = [a, evaluate(fn,{x:x})];\r\n    newState.options.data[0].secants[0] = {\r\n      x0: x,\r\n      x1: a,\r\n    }\r\n    newState.slope = rise / (a-x);\r\n    newState.trueSlope = evaluate(newState.derivative, {x:x});\r\n    newState.x = x;\r\n    this.setState(newState);\r\n\r\n    functionPlot(this.state.options);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div id =\"container\">\r\n      <div id = {this.state.graphRoot} onLoad={() => functionPlot(this.state.options)}></div>\r\n      <div id = \"inputs\">\r\n      <div id=\"slopes\">\r\n      <h2 id = \"calcslope\"> {\"Calculated Slope: \" + round(this.state.slope)} </h2>\r\n      <h2 id = \"trueslope\"> {\"True Slope: \" + round(this.state.trueSlope)} </h2> \r\n      </div>\r\n      <div id=\"sliders\">\r\n      <div className = \"barVal\">\r\n      <h3 id = \"hlabel\"> {\"a: \" + this.state.a} </h3>\r\n      <input type=\"range\" id =\"hslider\" name = \"h\" min=\"-10\" max=\"10\" step=\"0.01\" defaultValue = {this.props.a} onChange={(event) => this.changeA(parseFloat(event.target.value))}>\r\n      </input>\r\n      </div>\r\n      <div className = \"barVal\">\r\n      <h3 id = \"xlabel\"> {\"x: \" + this.state.x} </h3>\r\n      <input type = \"range\" id=\"xslider\" name = \"x\" min = \"-10\" max = \"10\" step =\"0.01\" defaultValue = {this.props.x} onChange={(event) => this.changeX(parseFloat(event.target.value))}></input>\r\n      </div>\r\n      </div>\r\n      <input type=\"text\" id=\"editing\" defaultValue = {this.props.fn} onChange={(event) => this.changeFn(event.target.value)}>\r\n      </input>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass HGraph extends React.Component<hGraphProps>  { // State is just props (but we will change it) for now, no need to use different interfaces\r\n  public state:hGraphState = { // not your typical constructor, apparently this is the TypeScript way to do state now: https://stackoverflow.com/questions/51074355/cannot-assign-to-state-because-it-is-a-constant-or-a-read-only-property\r\n    fn: this.props.fn,\r\n    derivative: derivative(this.props.fn,'x').toString(),\r\n    h: this.props.h,\r\n    x: this.props.x,\r\n    slope: ((evaluate(this.props.fn,{x : this.props.x + this.props.h}) - evaluate(this.props.fn,{x:this.props.x})) / this.props.h),\r\n    trueSlope: evaluate(derivative(this.props.fn,'x').toString(),{x: this.props.x}),\r\n    graphRoot: this.props.graphRoot,\r\n    options: this.props.options,\r\n  }\r\n\r\n  componentDidMount() {\r\n    functionPlot(this.props.options);\r\n  }\r\n\r\n\r\n\r\n  changeFn(fn: string) {\r\n    try {\r\n      if (fn !== '') {\r\n        let newState = Object.assign({}, this.state);\r\n        let x  = newState.x;\r\n        let h  = newState.h;\r\n        let rise = evaluate(fn,{x:x+h}) - evaluate(fn,{x:x});\r\n        // Update everything b/c new function\r\n        newState.options.data[0].fn = fn;\r\n        newState.fn = fn;\r\n        newState.derivative = derivative(fn,'x').toString();\r\n        newState.options.data[0].secants[0] = {\r\n          x0: x,\r\n          x1: x+h,\r\n        }\r\n        newState.options.data[1].vector = [h,0];\r\n        newState.options.data[1].offset = [x,evaluate(fn,{x:x})];\r\n        newState.options.data[2].vector = [0, rise];\r\n        newState.options.data[2].offset = [x+h, evaluate(fn,{x:x})];\r\n        newState.slope = rise / h;\r\n        newState.trueSlope = evaluate(newState.derivative, {x:x});\r\n\r\n        this.setState(newState); // I trust React implicitly about mutation but this seems convoluted. What do I know though?\r\n      }\r\n      functionPlot(this.state.options);\r\n    }\r\n    catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n  \r\n  changeH(h: number) {\r\n    let x = this.state.x;\r\n    let fn = this.state.fn;\r\n    let newState = Object.assign({}, this.state); // React does NOT like you mutating the state directly so I have to do this copying monstrosity from SO: https://stackoverflow.com/questions/45557301/how-to-change-the-state-with-react-typescript-2-0\r\n    let rise = evaluate(fn,{x:(x+h)}) - evaluate(fn,{x:x}); // y1 - y2 convenience var\r\n\r\n    // this.state is decapitated from the namespace here for readability and convenience\r\n\r\n    newState.options.data[1].vector = [h,0];\r\n    // no need to change first offset, doesn't have an h val for calculation\r\n    newState.options.data[2].vector = [0, rise];\r\n    newState.options.data[2].offset = [x+h, evaluate(fn,{x:x})];\r\n    newState.options.data[0].secants[0] = {\r\n      x0: x,\r\n      x1: x+h,\r\n    }\r\n    newState.slope = rise / h;\r\n    // no need to change true slope, only changes with x\r\n    \r\n    newState.h = h;\r\n    this.setState(newState);\r\n\r\n    functionPlot(this.state.options);\r\n  }\r\n\r\n  changeX(x: number) {\r\n    let h = this.state.h;\r\n    let fn = this.state.fn;\r\n    let newState = Object.assign({}, this.state); // React does NOT like you mutating the state directly so I have to do this copying monstrosity from SO: https://stackoverflow.com/questions/45557301/how-to-change-the-state-with-react-typescript-2-0\r\n    let rise = evaluate(fn,{x:(x+h)}) - evaluate(fn,{x:x}); // y1 - y2 convenience var\r\n    // Again this.state is decapitated from the namespace here for readability and convenience\r\n\r\n\r\n    // no need to change first vector, doesn't use x\r\n    newState.options.data[1].offset = [x,evaluate(fn,{x:x})];\r\n    newState.options.data[2].vector = [0, evaluate(fn,{x:x+h}) - evaluate(fn,{x:x})];\r\n    newState.options.data[2].offset = [x+h, evaluate(fn,{x:x})];\r\n    newState.options.data[0].secants[0] = {\r\n      x0: x,\r\n      x1: x+h,\r\n    }\r\n    newState.slope = rise / h;\r\n    newState.trueSlope = evaluate(newState.derivative, {x:x});\r\n    newState.x = x;\r\n    this.setState(newState);\r\n\r\n    functionPlot(this.state.options);\r\n  }\r\n\r\n  render() {\r\n    let mathString = String(\"m_{calculated} \\\\: = \\\\:\" + round(this.state.slope) + \"\\\\: = \\\\frac{\\\\color{#4682b4}\" + round(evaluate(this.state.fn,{x:(this.state.x+this.state.h)})) + \"\\\\color{#000} - \\\\: \\\\color{#b47846}\" + round(evaluate(this.state.fn,{x:this.state.x})) + \"\\\\color{#000}}{\\\\color{#bd3c4b}\" + this.state.h  + \"} \\\\: ~ \\\\: m_{true} \\\\: = \\\\: \" + round(this.state.trueSlope));\r\n    return(\r\n      <div id =\"container\">\r\n      <div id = {this.state.graphRoot}></div>\r\n      <TeX className=\"math\" math={mathString} block/>\r\n      <div className=\"sliders\">\r\n      <input type=\"range\" id =\"hslider\" name = \"h\" min=\"0.01\" max=\"10\" step=\"0.1\" defaultValue = {this.props.h} onChange={(event) => this.changeH(parseFloat(event.target.value))}></input>\r\n      <input type = \"range\" id=\"xslider\" name = \"x\" min = \"-10\" max = \"10\" step =\"0.1\" defaultValue = {this.props.x} onChange={(event) => this.changeX(parseFloat(event.target.value))}></input>\r\n      <input type=\"text\" id=\"editing\" defaultValue = {this.props.fn} onChange={(event) => this.changeFn(event.target.value)}></input>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nclass RiseRunStatic extends React.Component<riseRunProps> {\r\n  public state:riseRunState = {\r\n    fn: this.props.fn,\r\n    derivative: this.props.derivative,\r\n    x2: this.props.x2,\r\n    x1: this.props.x1,\r\n    options: this.props.options\r\n  }\r\n\r\n  componentDidMount() {\r\n    functionPlot(this.props.options);\r\n  }\r\n\r\n\r\n  changeX2(x: number) {\r\n    let fn = this.state.fn;\r\n    let x1 = this.state.x1;\r\n    let x2 = x;\r\n    let newState = Object.assign({}, this.state); // React does NOT like you mutating the state directly so I have to do this copying monstrosity from SO: https://stackoverflow.com/questions/45557301/how-to-change-the-state-with-react-typescript-2-0\r\n    let rise = evaluate(fn,{x:x2}) - evaluate(fn,{x:x1}); // y1 - y2 convenience var\r\n    // Again this.state is decapitated from the namespace here for readability and convenience\r\n    \r\n    \r\n    newState.options.data[1].vector = [x2-x1,0];\r\n    // no need to change first offset doesn't use x2\r\n    newState.options.data[2].vector = [0, rise];\r\n    newState.options.data[2].offset = [x2, evaluate(fn,{x:x1})];\r\n    newState.x2 = x2;\r\n\r\n    this.setState(newState);\r\n\r\n    functionPlot(this.state.options);\r\n  }\r\n\r\n  changeX1(x: number) {\r\n    let fn = this.state.fn;\r\n    let x1 = x;\r\n    let x2 = this.state.x2;\r\n    let newState = Object.assign({}, this.state); // React does NOT like you mutating the state directly so I have to do this copying monstrosity from SO: https://stackoverflow.com/questions/45557301/how-to-change-the-state-with-react-typescript-2-0\r\n    let rise = evaluate(fn,{x:x2}) - evaluate(fn,{x:x1}); // y1 - y2 convenience var\r\n    // Again this.state is decapitated from the namespace here for readability and convenience\r\n\r\n\r\n    newState.options.data[1].vector = [x2-x1,0];\r\n    newState.options.data[1].offset = [x1,evaluate(fn,{x:x1})]\r\n    newState.options.data[2].vector = [0, rise];\r\n    newState.options.data[2].offset = [x2, evaluate(fn,{x:x1})];\r\n    newState.x1 = x1;\r\n\r\n    this.setState(newState);\r\n\r\n    functionPlot(this.state.options);\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <div id={this.props.graphRoot} onLoad={() => functionPlot(this.props.options)}></div>\r\n        <TeX className=\"math\" math = {\"m = \" + round((evaluate(this.state.fn,{x:this.state.x2}) - evaluate(this.state.fn,{x:this.state.x1})) / (this.state.x2 - this.state.x1)) + \"\\\\: = \\\\:\" + \"\\\\frac{\\\\color{#4682b4}\" + round(evaluate(this.state.fn,{x:this.state.x2})) + \"\\\\color{#000} \\\\: - \\\\: \\\\color{#b47846}\" + round(evaluate(this.state.fn,{x:this.state.x1})) + \"\\\\color{#000}}{\\\\color{#4682b4}\" + this.state.x2 + \"\\\\color{#000} \\\\: - \\\\: \\\\color{#b47846}\" + this.state.x1 +\"}\"} block/>\r\n        <div className=\"sliders\">\r\n          <input type = \"range\" id=\"x1slider\" name = \"x\" min = \"-10\" max = \"10\" step =\"0.1\" defaultValue = {this.props.x1} onChange={(event) => this.changeX1(parseFloat(event.target.value))}></input>\r\n          <input type = \"range\" id=\"x2slider\" name = \"x\" min = \"-10\" max = \"10\" step =\"0.1\" defaultValue = {this.props.x2} onChange={(event) => this.changeX2(parseFloat(event.target.value))}></input>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass RiseRunAntiStatic extends React.Component<riseRunProps> {\r\n  public state:riseRunState = {\r\n    fn: this.props.fn,\r\n    derivative: this.props.derivative,\r\n    x2: this.props.x2,\r\n    x1: this.props.x1,\r\n    options: this.props.options\r\n  }\r\n\r\n  componentDidMount() {\r\n    functionPlot(this.props.options);\r\n  }\r\n\r\n\r\n  changeFn(fn: string) {\r\n    try {\r\n      let x1 = this.state.x1;\r\n      let x2 = this.state.x2;\r\n\r\n      let newState = Object.assign({}, this.state); // React does NOT like you mutating the state directly so I have to do this copying monstrosity from SO: https://stackoverflow.com/questions/45557301/how-to-change-the-state-with-react-typescript-2-0\r\n      let rise = evaluate(fn,{x:x2}) - evaluate(fn,{x:x1}); // y1 - y2 convenience var\r\n      // Again this.state is decapitated from the namespace here for readability and convenience\r\n\r\n\r\n      \r\n      newState.options.data[1].vector = [x2-x1,0];\r\n      newState.options.data[1].offset = [x1,evaluate(fn,{x:x1})];\r\n      // no need to change first offset doesn't use x2\r\n      newState.options.data[2].vector = [0, rise];\r\n      newState.options.data[2].offset = [x2, evaluate(fn,{x:x1})];\r\n      newState.fn = fn;\r\n      newState.options.data[0].fn = fn;\r\n      newState.derivative = derivative(fn,'x').toString();\r\n\r\n      this.setState(newState);\r\n\r\n      functionPlot(this.state.options);\r\n    }\r\n    catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  changeX2(x: number) {\r\n    let fn = this.state.fn;\r\n    let x1 = this.state.x1;\r\n    let x2 = x;\r\n    let newState = Object.assign({}, this.state); // React does NOT like you mutating the state directly so I have to do this copying monstrosity from SO: https://stackoverflow.com/questions/45557301/how-to-change-the-state-with-react-typescript-2-0\r\n    let rise = evaluate(fn,{x:x2}) - evaluate(fn,{x:x1}); // y1 - y2 convenience var\r\n    // Again this.state is decapitated from the namespace here for readability and convenience\r\n    \r\n    \r\n    newState.options.data[1].vector = [x2-x1,0];\r\n    // no need to change first offset doesn't use x2\r\n    newState.options.data[2].vector = [0, rise];\r\n    newState.options.data[2].offset = [x2, evaluate(fn,{x:x1})];\r\n    newState.x2 = x2;\r\n\r\n    this.setState(newState);\r\n\r\n    functionPlot(this.state.options);\r\n  }\r\n\r\n  changeX1(x: number) {\r\n    let fn = this.state.fn;\r\n    let x1 = x;\r\n    let x2 = this.state.x2;\r\n    let newState = Object.assign({}, this.state); // React does NOT like you mutating the state directly so I have to do this copying monstrosity from SO: https://stackoverflow.com/questions/45557301/how-to-change-the-state-with-react-typescript-2-0\r\n    let rise = evaluate(fn,{x:x2}) - evaluate(fn,{x:x1}); // y1 - y2 convenience var\r\n    // Again this.state is decapitated from the namespace here for readability and convenience\r\n\r\n\r\n    newState.options.data[1].vector = [x2-x1,0];\r\n    newState.options.data[1].offset = [x1,evaluate(fn,{x:x1})]\r\n    newState.options.data[2].vector = [0, rise];\r\n    newState.options.data[2].offset = [x2, evaluate(fn,{x:x1})];\r\n    newState.x1 = x1;\r\n\r\n    this.setState(newState);\r\n\r\n    functionPlot(this.state.options);\r\n\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return(\r\n      <div>\r\n        <div id={this.props.graphRoot} onLoad={() => functionPlot(this.props.options)}></div>\r\n        <TeX className=\"math\" math = {\"m = \" + round((evaluate(this.state.fn,{x:this.state.x2}) - evaluate(this.state.fn,{x:this.state.x1})) / (this.state.x2 - this.state.x1)) + \"\\\\: = \\\\:\" + \"\\\\frac{\\\\color{#4682b4}\" + round(evaluate(this.state.fn,{x:this.state.x2})) + \"\\\\color{#000} \\\\: - \\\\: \\\\color{#b47846}\" + round(evaluate(this.state.fn,{x:this.state.x1})) + \"\\\\color{#000}}{\\\\color{#4682b4}\" + this.state.x2 + \"\\\\color{#000} \\\\: - \\\\: \\\\color{#b47846}\" + this.state.x1 +\"}\" } block />\r\n        <div className=\"sliders\">\r\n          <input type = \"range\" id=\"x1slider\" name = \"x\" min = \"-10\" max = \"10\" step =\"0.1\" defaultValue = {this.props.x1} onChange={(event) => this.changeX1(parseFloat(event.target.value))}></input>\r\n          <input type = \"range\" id=\"x2slider\" name = \"x\" min = \"-10\" max = \"10\" step =\"0.1\" defaultValue = {this.props.x2} onChange={(event) => this.changeX2(parseFloat(event.target.value))}></input>\r\n          <input type = \"text\" id =\"fninput\" defaultValue = {this.props.fn} onChange = {(event) => this.changeFn(event.target.value)}></input>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass BallFunction extends React.Component<ballProps, ballState> {\r\n\r\n  public state:ballState = {\r\n    fn: this.props.fn,\r\n    derivative: this.props.derivative,\r\n    tangent: evaluate(this.props.derivative,{x:this.props.tangentX}) + 'x + ' + (evaluate(this.props.fn,{x:this.props.tangentX}) - evaluate(this.props.derivative,{x:this.props.tangentX})*this.props.tangentX),\r\n    tangentX: this.props.tangentX,\r\n    options: this.props.options,\r\n    tick: 0,\r\n    on: false,\r\n    increment: Math.abs(this.props.endX - this.props.startX)/this.props.ticks,\r\n  }\r\n\r\n  componentDidMount() {\r\n    functionPlot(this.props.options);\r\n  }\r\n\r\n  \r\n  handleToggle() { // Deprecated cuz I made something better\r\n    if(this.state.on === false) {\r\n      this.turnOn();\r\n    }\r\n    else {\r\n      this.turnOff();\r\n    }\r\n  }\r\n\r\n  reset(fn = \"joebiden\") {\r\n    let resState = Object.assign({}, this.state);\r\n    if (fn !== \"joebiden\") {\r\n      resState.fn = fn;\r\n      resState.options.data[0].fn = fn;\r\n      resState.options.data[2].fn = fn;\r\n      resState.derivative = derivative(fn,'x').toString();\r\n      resState.tangent = evaluate(resState.derivative,{x:resState.tangentX}) + 'x + ' + (evaluate(resState.fn,{x:resState.tangentX}) - evaluate(resState.derivative,{x:resState.tangentX})*resState.tangentX)\r\n    }\r\n    resState.options.data[0].points = [[this.props.startX,evaluate(resState.fn,{x:this.props.startX})]];\r\n    resState.tick = 0;\r\n    resState.on = false;\r\n    this.setState(resState);\r\n    functionPlot(this.state.options);\r\n  }\r\n\r\n  stateExec(num:number) {\r\n    console.log(\"set state executed \" + num);\r\n    console.log(this.state.options.data[0].fn)\r\n    console.log(this.state.fn)\r\n  }\r\n\r\n  changeFn(fn:string) {\r\n    try {\r\n      if (fn !== '') {\r\n        this.reset(fn);\r\n      }\r\n    }\r\n    catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  changeTanX(tanX:number) {\r\n    try {\r\n      let tangent = evaluate(this.state.derivative,{x:tanX}) + 'x + ' + (evaluate(this.state.fn,{x:tanX}) - evaluate(this.state.derivative,{x:tanX})*tanX);\r\n      let newScatter = [];\r\n      let curX;\r\n      let curY;\r\n      for(let i:number = 0; i < this.props.ticks; i++) {\r\n\r\n        let curX = this.props.startX + i*this.state.increment;\r\n        if (curX < tanX) {\r\n          curY = evaluate(this.state.fn,{x:curX});\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n        newScatter.push([curX,curY]);\r\n      }\r\n      curX = 100000; // Arbitrarily far, todo?: Not just arbitrarily far?\r\n      curY = evaluate(tangent,{x:curX});\r\n      newScatter.push([curX,curY]);\r\n\r\n\r\n      let newState = Object.assign({}, this.state); \r\n      newState.tangent = tangent;\r\n      newState.tangentX = tanX;\r\n      newState.options.data[0].points = newScatter;\r\n      newState.options.data[1].points = [[tanX, evaluate(tangent,{x:tanX})]]\r\n      this.setState(newState);\r\n      functionPlot(this.state.options);\r\n    }\r\n    catch(e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  turnOn() { // Deprecated cuz I made something better\r\n    let newState = Object.assign({}, this.state); \r\n    if (evaluate(this.props.derivative,{x:this.state.tangentX}) === 0) {\r\n      newState.tangent = String((evaluate(this.state.fn,{x:this.state.tangentX}) - evaluate(this.state.derivative,{x:this.state.tangentX})*this.state.tangentX));\r\n    }\r\n    newState.options.data[1].points = [[this.state.tangentX,evaluate(this.state.fn,{x:this.state.tangentX})]];\r\n    newState.on = true;\r\n    newState.tick++;\r\n    this.setState(newState);\r\n    functionPlot(this.state.options);\r\n    requestAnimationFrame(this.update.bind(this));\r\n    // From https://stackoverflow.com/questions/4011793/this-is-undefined-in-javascript-class-methods\r\n  \r\n  }\r\n\r\n  turnOff() { // Deprecated cuz I made something better\r\n    let newState = Object.assign({}, this.state);     \r\n    newState.on = false;\r\n    this.setState(newState);\r\n  }\r\n\r\n  update() { // Deprecated cuz I made something better\r\n    if (this.state.on) {\r\n      let newState = Object.assign({}, this.state);     \r\n      if (this.state.tick < this.props.ticks) {\r\n        let curX = this.props.startX + (this.state.increment*this.state.tick);\r\n        console.log(curX);\r\n        let curY;\r\n        console.log(evaluate(this.state.tangent,{x:curX}));\r\n        if (curX > this.state.tangentX) {\r\n          console.log(evaluate(this.state.tangent,{x:curX}));\r\n          curY = evaluate(this.state.tangent,{x:curX});\r\n        }\r\n        else {\r\n          curY = evaluate(this.state.fn,{x:curX});\r\n        }\r\n        newState.options.data[0].points.push([curX,curY]);\r\n        newState.tick+=1;\r\n        console.log(this.state.tangent);\r\n        this.setState(newState);\r\n        //console.log(this.state.options.data[0].points.length)\r\n        functionPlot(this.state.options);\r\n        //console.log(this.state.options.data[0].points.length)\r\n        requestAnimationFrame(this.update.bind(this));\r\n      }\r\n      else {\r\n        newState.on = false;\r\n        this.setState(newState);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n    <div>\r\n      <div id={this.props.graphRoot}></div>\r\n      <div className=\"sliders\">\r\n        <input type={'text'} onChange= {(event) => this.changeFn(event.target.value)} defaultValue={this.props.fn}></input>\r\n        <input type={'range'} onChange= {(event) => this.changeTanX(parseFloat(event.target.value))} defaultValue={this.props.tangentX} min={this.props.startX} max={this.props.endX} step={this.state.increment}></input>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nclass BallFunctionSecant extends React.Component<ballPropsSecant, ballStateSecant> { //TODO: Initial graphing stuff so you dont have to pull on a knob to get something done (AKA Story of my Life)\r\n\r\n  public state:ballStateSecant = {\r\n    fn: this.props.fn,\r\n    derivative: this.props.derivative,\r\n    secantDist: this.props.secantDist,\r\n    tangent: evaluate(this.props.derivative,{x:this.props.tangentX}) + 'x + ' + (evaluate(this.props.fn,{x:this.props.tangentX}) - evaluate(this.props.derivative,{x:this.props.tangentX})*this.props.tangentX),\r\n    tangentX: this.props.tangentX,\r\n    options: this.props.options,\r\n    tick: 0,\r\n    on: false,\r\n    increment: Math.abs(this.props.endX - this.props.startX)/this.props.ticks,\r\n  }\r\n\r\n  componentDidMount() {\r\n    functionPlot(this.props.options);\r\n  }\r\n  \r\n  handleToggle() {\r\n    if(this.state.on === false) {\r\n      this.turnOn();\r\n    }\r\n    else {\r\n      this.turnOff();\r\n    }\r\n  }\r\n\r\n  reset(fn = \"joebiden\") {\r\n    let resState = Object.assign({}, this.state);\r\n    if (fn !== \"joebiden\") {\r\n      resState.fn = fn;\r\n      resState.options.data[0].fn = fn;\r\n      resState.options.data[2].fn = fn;\r\n      resState.derivative = derivative(fn,'x').toString();\r\n      resState.tangent = evaluate(resState.derivative,{x:resState.tangentX}) + 'x + ' + (evaluate(resState.fn,{x:resState.tangentX}) - evaluate(resState.derivative,{x:resState.tangentX})*resState.tangentX)\r\n    }\r\n    resState.options.data[0].points = [[this.props.startX,evaluate(resState.fn,{x:this.props.startX})]];\r\n    resState.tick = 0;\r\n    resState.on = false;\r\n    this.setState(resState);\r\n    functionPlot(this.state.options);\r\n  }\r\n\r\n  stateExec(num:number) {\r\n    console.log(\"set state executed \" + num);\r\n    console.log(this.state.options.data[0].fn)\r\n    console.log(this.state.fn)\r\n  }\r\n\r\n  changeFn(fn:string) {\r\n    try {\r\n      if (fn !== '') {\r\n        this.reset(fn);\r\n      }\r\n    }\r\n    catch(err) {\r\n      console.log(err);\r\n    }\r\n  }\r\n\r\n  changeTanX(tanX:number) {\r\n    try {\r\n      let tangent = evaluate(this.state.derivative,{x:tanX}) + 'x + ' + (evaluate(this.state.fn,{x:tanX}) - evaluate(this.state.derivative,{x:tanX})*tanX);\r\n      let newScatter = [];\r\n      let curX, curY;\r\n      for(let i:number = 0; i < this.props.ticks; i++) {\r\n\r\n        let curX = this.props.startX + i*this.state.increment;\r\n        if (curX < tanX) {\r\n          curY = evaluate(this.state.fn,{x:curX});\r\n        }\r\n        else {\r\n          break;\r\n        }\r\n        newScatter.push([curX,curY]);\r\n      }\r\n      curX = 100000; // Arbitrarily far, todo?: Not just arbitrarily far?\r\n      curY = evaluate(tangent,{x:curX});\r\n      newScatter.push([curX,curY]);\r\n\r\n\r\n      let newState = Object.assign({}, this.state); \r\n      newState.tangent = tangent;\r\n      newState.tangentX = tanX;\r\n      newState.options.data[0].points = newScatter;\r\n      newState.options.data[1].points = [[tanX, evaluate(tangent,{x:tanX})]]\r\n      let point1 = [newState.tangentX-newState.secantDist, evaluate(newState.fn,{x:newState.tangentX-newState.secantDist})];\r\n      let point2 = [newState.tangentX+newState.secantDist, evaluate(newState.fn,{x:newState.tangentX+newState.secantDist})];\r\n      newState.options.data[3].points = [];\r\n      newState.options.data[3].points.push(point1);\r\n      newState.options.data[3].points.push(point2);\r\n      newState.options.data[2].secants = [{x0: point1[0], x1: point2[0]}];\r\n\r\n      this.setState(newState);\r\n      functionPlot(this.state.options);\r\n    }\r\n    catch(e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n\r\n  changeSecantDist(newDist:number) {\r\n    try {\r\n      let newState = Object.assign({}, this.state); \r\n      newState.secantDist = newDist;\r\n      let point1 = [newState.tangentX-newDist, evaluate(newState.fn,{x:newState.tangentX-newDist})];\r\n      let point2 = [newState.tangentX+newDist, evaluate(newState.fn,{x:newState.tangentX+newDist})];\r\n      newState.options.data[3].points = [];\r\n      newState.options.data[3].points.push(point1);\r\n      newState.options.data[3].points.push(point2);\r\n      newState.options.data[2].secants = [{x0: point1[0], x1: point2[0]}];\r\n      this.setState(newState);\r\n      functionPlot(this.state.options);\r\n    }\r\n    catch(er) {\r\n      console.log(er);\r\n    }\r\n  }\r\n\r\n  turnOn() {\r\n    let newState = Object.assign({}, this.state); \r\n    if (evaluate(this.props.derivative,{x:this.state.tangentX}) === 0) {\r\n      newState.tangent = String((evaluate(this.state.fn,{x:this.state.tangentX}) - evaluate(this.state.derivative,{x:this.state.tangentX})*this.state.tangentX));\r\n    }\r\n    newState.options.data[1].points = [[this.state.tangentX,evaluate(this.state.fn,{x:this.state.tangentX})]];\r\n    newState.on = true;\r\n    newState.tick++;\r\n    this.setState(newState);\r\n    functionPlot(this.state.options);\r\n    requestAnimationFrame(this.update.bind(this));\r\n    // From https://stackoverflow.com/questions/4011793/this-is-undefined-in-javascript-class-methods\r\n  \r\n  }\r\n\r\n  turnOff() {\r\n    let newState = Object.assign({}, this.state);     \r\n    newState.on = false;\r\n    this.setState(newState);\r\n  }\r\n\r\n  update() {\r\n    if (this.state.on) {\r\n      let newState = Object.assign({}, this.state);     \r\n      if (this.state.tick < this.props.ticks) {\r\n        let curX = this.props.startX + (this.state.increment*this.state.tick);\r\n        console.log(curX);\r\n        let curY;\r\n        console.log(evaluate(this.state.tangent,{x:curX}));\r\n        if (curX > this.state.tangentX) {\r\n          console.log(evaluate(this.state.tangent,{x:curX}));\r\n          curY = evaluate(this.state.tangent,{x:curX});\r\n        }\r\n        else {\r\n          curY = evaluate(this.state.fn,{x:curX});\r\n        }\r\n        newState.options.data[0].points.push([curX,curY]);\r\n        newState.tick+=1;\r\n        console.log(this.state.tangent);\r\n        this.setState(newState);\r\n        //console.log(this.state.options.data[0].points.length)\r\n        functionPlot(this.state.options);\r\n        //console.log(this.state.options.data[0].points.length)\r\n        requestAnimationFrame(this.update.bind(this));\r\n      }\r\n      else {\r\n        newState.on = false;\r\n        this.setState(newState);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n    <div>\r\n      <div id={this.props.graphRoot}></div>\r\n      <div className=\"sliders\">\r\n        <input type={'text'} onChange= {(event) => this.changeFn(event.target.value)} defaultValue={this.props.fn}></input>\r\n        <div className=\"slider\">\r\n        <input type={'range'} onChange= {(event) => this.changeTanX(parseFloat(event.target.value))} defaultValue={0} min={this.props.startX} max={this.props.endX} step={this.state.increment}></input>\r\n        </div>\r\n        <div className=\"slider\">\r\n        <input type={'range'} onChange= {(event) => this.changeSecantDist(parseFloat(event.target.value))} defaultValue={this.props.secantDist} min={0.1} max={5} step={0.1}></input>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n\r\nclass BasicDiscontinuityGraph extends React.Component<discontinuityGraph> {\r\n  componentDidMount() {\r\n    let options = {\r\n      target: '#' + this.props.graphRoot,\r\n      grid: true,\r\n      width: graphWidth,\r\n      height: graphHeight,\r\n      disableZoom: true,\r\n      yAxis: {domain: [2, 8]},\r\n      xAxis: {domain: [-5, 5]}, \r\n      data: [\r\n        { // function\r\n          fn: this.props.fn,\r\n          color: 'steelblue',\r\n        },\r\n        {\r\n          x: 'cos(t)/16',\r\n          y: 'sin(t)/16 + 4',\r\n          fnType: 'parametric',\r\n          graphType: 'polyline' as 'polyline',\r\n          color: 'steelblue',\r\n        },\r\n      ]\r\n    } as any\r\n    \r\n\r\n    functionPlot(options);\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div id={this.props.graphRoot}>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass BasicGraph extends React.Component<basicProps> {\r\n\r\n  componentDidMount() {\r\n    functionPlot(this.props.options);\r\n  }\r\n\r\n  render() {\r\n    return( // .slice() is to remove the # as the first bit\r\n      <div id={this.props.options.target.slice(1)}>\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nclass TangentOverGraph extends React.Component<tangentOverGraphProps> {\r\n  public state: tangentOverGraphProps = {\r\n    options: this.props.options,\r\n    tangentX: this.props.tangentX,\r\n  }\r\n\r\n  componentDidMount() {\r\n    functionPlot(this.state.options);\r\n  }\r\n\r\n  changeTanX(tanX:number) {\r\n    let newState = Object.assign({}, this.state);\r\n    let fn = newState.options.data[0].fn;\r\n    let dX = newState.options.data[0].derivative.fn; \r\n    newState.options.data[0].derivative.x0 = tanX;\r\n    newState.options.data[1].offset = [tanX, evaluate(fn, {x:tanX})];\r\n    newState.options.data[2].vector = [0, evaluate(dX, {x:tanX})];\r\n    newState.options.data[2].offset = [tanX + 1, evaluate(fn, {x:tanX})];\r\n    newState.tangentX = tanX;\r\n    this.setState(newState);\r\n    functionPlot(this.state.options);\r\n  }\r\n\r\n\r\n  render() {\r\n    let fn = this.state.options.data[0].fn;\r\n    let dX = this.state.options.data[0].derivative.fn; \r\n    let tanX = this.state.tangentX;\r\n    return(\r\n      <div className=\"TangentOverGraph\">\r\n        <div id={this.state.options.target.slice(1)}> </div>\r\n        <TeX className=\"math\" math={\"m = \\\\color{steelblue} \" + dX + \" \\\\color{#000} = \\\\color{steelblue} \" + dX.replace(/x/g, String(tanX)) + \"\\\\color{#000} = \" + round(evaluate(dX, {x:tanX})) + \" = \" + \"\\\\frac{\\\\color{#05b378}\" + String(round(evaluate(fn, {x:tanX}) + evaluate(dX, {x:tanX}))) + \" - \" + String(round(evaluate(fn, {x:tanX})))  + \"\\\\color{#000}}{ \\\\color{red}\" + String(round(tanX+1)) + \" - \" + String(round(tanX)) + \"}\" } block/>\r\n        <div className = \"sliders\">\r\n          <div className= \"slider\">\r\n            <input type=\"range\" min={-10} max={10} step={.1} defaultValue={this.props.tangentX} onChange={(event) => this.changeTanX(parseFloat(event.target.value))}></input>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\nclass LatexCarousel extends React.Component<latexCarouselProps> {\r\n\r\n  public state:latexCarouselState = {\r\n    index: 0\r\n  }\r\n\r\n  leftButtonHandler() {\r\n    if (this.state.index > 0) {\r\n      let newState = Object.assign({}, this.state); \r\n      newState.index = this.state.index - 1;\r\n      this.setState(newState);\r\n    }\r\n  }\r\n\r\n  rightButtonHandler() {\r\n    if (this.state.index < this.props.textList.length-1) {\r\n      let newState = Object.assign({}, this.state); \r\n      newState.index = this.state.index + 1;\r\n      this.setState(newState);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"mainCarousel\">\r\n        <p className=\"textArea\"> {this.props.textList[this.state.index]} </p>\r\n        <TeX math={this.props.mathList[this.state.index] as string} className=\"math\" block/>\r\n        <div className=\"backandforwardbuttons\">\r\n          <div className=\"leftButton\" onClick={() => this.leftButtonHandler()}></div>\r\n          <div className=\"rightButton\" onClick={() => this.rightButtonHandler()}></div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\nconst DerivativeComp = () => {\r\n    return(\r\n  <div>\r\n    <h1> The Derivative </h1>\r\n    <p> You’re probably already familiar with the concept of slope. Slope is a simple number that describes the steepness or slant of a specific line. Mathematically, you’ve probably seen it defined as: </p>\r\n    <TeX className=\"math\" math=\"m = \\frac{y_1 - y_2}{x_1 - x_2}\" block/>\r\n    <p> Or: </p>\r\n    <TeX className=\"math\" math=\"m = \\frac{\\Delta y}{\\Delta x}\" block/>\r\n    <p> Or: </p>\r\n    <TeX className=\"math\" math=\"m = \\frac{Rise}{Run}\" block/>\r\n    <p> Slope is useful for a variety of reasons. We can figure out what speed, a car for example, is moving at by finding the slope between two points in time for the car.  \r\n    <br></br><br></br> At 1:00 PM, the car was sitting in a garage, but by 3:00 PM, the car had traveled 100 miles. How fast was the car moving? </p>\r\n    <TeX className=\"math\" math=\"m = \\frac{100\\: miles\\: - \\:0\\:miles}{3 \\: hours \\: - \\: 0 \\: hours} = \\frac{50\\:miles}{hour}\" block /> \r\n    <p> For lines, the whole function has the same slope. The line 2x, for example, has the same slope of 2, no matter what point we look at. </p>\r\n    <div id='riseruns'> \r\n    <RiseRunStatic fn={\"2x\"} derivative={'2'} x2={5} x1={0} options={riseRunOptions1} graphRoot={riseRoot1}></RiseRunStatic>\r\n    </div>\r\n    <p> Lines are simple because we know the slope at every point. It is the same as any other! But for other functions, we don’t. Can we find it? </p>\r\n    <p> Maybe we can use the same equation that works for lines on the more complex curves? </p>\r\n    <RiseRunAntiStatic fn={\"x^2\"} derivative={'2x'} x2={2} x1={0} options={riseRunOptions2} graphRoot={riseRoot2}></RiseRunAntiStatic>\r\n    <p> We quickly notice a few problems with this approach. First of all, what points do we pick? If we want to find the slope at x=1, do we pick x=1 and x=2? x=0 and x=2? </p>\r\n    <p> An even bigger problem makes itself clear too. No matter what two points we pick, the slope at the point won’t be quite right. </p>\r\n    <p> We can see this geometrically. We can imagine the function like a ball on a string, tracking the function. If the string is cut, the ball should move in a straight line in the same direction it was moving right before the string was cut.</p>\r\n    <BallFunction fn={\"sin(x)\"} derivative={'cos(x)'} options={ballOptions} startX = {-10} tangentX = {Math.PI/2} endX = {10} ticks = {500} graphRoot={ballGraph}></BallFunction>\r\n    <p> If we want to find the line the ball should go in at any point, using a line between two points will not really work because the line of the ball only intersects the function at one point, right when the string is cut. </p>\r\n    <BallFunctionSecant fn={'cos(x)'} derivative='-sin(x)' secantDist={5} options={ballSecantOptions} startX={-10} endX = {10} tangentX={Math.PI/2} ticks={500} graphRoot={ballSecantGraph}></BallFunctionSecant>\r\n    <p> If we zoom in close enough on any of the two point lines, we'll see that they don't exactly mirror their one point counterparts. They are always a little bit higher or lower, or have a different slope. This is a fundamental property of these two point lines, which are called secants. They will never quite match the one point lines, or tangents.</p>\r\n    <p> We can see something interesting though. The closer the two points get to each other (and the point for the tangent), the closer their line is to the real path of our hypothetical ball. </p>\r\n    <p> Lets take this pattern we notice to its conclusion. What if we just had 0 distance between the points? That would solve the issue of having two points represent a line with one intersection. </p>\r\n    <TeX className=\"math\" math=\"\\frac{1-1}{1-1} = \\frac{0}{0}\" block/>\r\n    <p> If there is 0 distance between the points, they'll just be the same, and we’ll always have to divide by zero. Maybe we could see how the slope changes as the points get closer? Maybe the slope value converges to something. Let's do a little algebra and see if we can represent how the slope of the line changes based on the distance between the two points. </p>\r\n    <p> Our normal slope equation is: </p>\r\n    <TeX className=\"math\" math=\"\\frac{y_2 - y_1}{x_2 - x_1}\" block/>\r\n    <p> We want to turn this into an equation with just two variables. The point, and the distance between it and the second point.  </p>\r\n    <p> First, let's do some easy substitution. We know that:  <TeX className=\"math\" math=\"y_2 = f(x_2)\"/> and  <TeX className=\"math\" math=\"y_1 = f(x_1)\"/> We can remove the two y variables just by making this substitution.</p>\r\n    <p> Next, let's just define the distance between the two x's to be h. That gets rid of another variable. <TeX className=\"math\" math=\"h = x_2 - x_1\" block/></p>\r\n    <p> After we replace the Ys with our new function notation, and the bottom difference with our new variable h, we end up with this equation: </p>\r\n    <TeX className=\"math\" math=\"\\frac{f(x_2) - f(x_1)}{h}\" block/>\r\n    <p> We still want only one point, so lets rewrite the first term of the function notation. x2 is just x1 + h (the distance between the two points). We can see this algebraically as well if we add  <TeX className=\"math\" math=\"x_1\"/> to each side of the definition of h: <TeX className=\"math\" math=\"x_2 = h + x_1\" block /> </p>\r\n    <p> Once we substitute <TeX className=\"math\" math=\"x_2\"/> , our new equation is: </p>\r\n    <TeX className=\"math\" math=\"\\frac{f(x_1+h) - f(x_1)}{h}\" block/>\r\n    <p> This is exactly what we wanted! An equation with one x variable and one variable for the distance between the two points.</p>\r\n    <p> Now that we have it, lets try it for some point and function. Lets try <TeX className=\"math\" math=\"x=2\"/> in the function <TeX className=\"math\" math=\"f(x) = x^2\"/>.</p>\r\n    <p> Lets start out by substituting what we just said would be our example, <TeX className=\"math\" math=\"x=2\"/> and <TeX className=\"math\" math=\"f(x) = x^2\"/>, then do just a bit of algebra.</p>\r\n    <TeX className=\"math\" math=\"\\frac{f(2+h)-f(2)}{h} = \\frac{(h+2)^2 - 2^2}{h} = \\frac{h^2+4h+4 - 4}{h}\" block/>\r\n    <p> The fours cancel out, and we are left with: </p>\r\n    <TeX className=\"math\" math=\"\\frac{h^2+4h}{h}\" block/>\r\n    <p> Looking at this equation we can see that it is a pretty typical rational equation, dividing by the variable. This means there will always be a removable discontinuity at h = 0, because we can't divide by 0.</p>\r\n    <p> As long as we remember that, we can cancel out the h.</p>\r\n    <TeX className=\"math\" math=\"\\frac{h^2+4h}{h} = h+4\" block/>\r\n    <p> This is the equation for the calculated slope of <TeX className=\"math\" math=\"f(x) = x^2  \\; at \\; x=2\"/> based on how far away the second point is. We can graph it with the discontinuity: </p>\r\n    <BasicDiscontinuityGraph fn={\"x+4\"} graphRoot={\"discontinuity1\"} discontinuity={0}></BasicDiscontinuityGraph>\r\n    <p> Wait. Now that we have graphed it, does this remind us of anything? If we have any experience with discontinuities, we know how to find the what the value of x=0 would be without the discontinuity. We take the limit! </p>\r\n    <p> The expected value at the point is just the limit of this equation, h+4, as h (the distance between points) goes to 0. We find out that the slope is 4, which is exactly the line our ball follows! </p>\r\n    <BasicGraph options={basicOptions}></BasicGraph>\r\n    <TeX className=\"math\" math=\"m \\: = \\: 4 = \\:  \\frac{\\color{#4682b4} 12 \\: \\color{#000} - \\: \\color{#b47846} 8}{\\color{#4682b4}3 \\: \\color{#000} - \\: \\color{#b47846} 2}\" block/>\r\n    <p> This property isn't unique to x^2. For any function, as h gets closer to 0, we can see that our secant line approximates the true tangent more closely.</p>\r\n    <HGraph fn={\"x^2\"} h={5} x={0} graphRoot={graphRoot} options={hOptions}></HGraph>\r\n    <div className=\"keyTakeaway\">\r\n    <h2 className=\"takeawaytitle\"> Key Takeaway - Limit Definition of Derivative </h2>\r\n    <p> So, the full equation would be: </p>\r\n    <TeX className=\"math\" math=\"\\lim_{h \\to 0} \\frac{f(x+h) - f(x)}{h}\" block/>\r\n    <p> This is the limit definition of the derivative. </p>\r\n    </div>\r\n    <p> Let’s summarize how we got here. We started off with our usual slope equation: </p>\r\n    <TeX className=\"math\" math=\"\\frac{y_2 - y_1}{x_2 - x_1}\" block/>\r\n    <p> After playing around with it a little, we found that the closer the two points got to each other, the closer their line got to the line of our hypothetical ball. </p>\r\n    <BallFunctionSecant fn={'2x^2 + 3'} derivative='4x' secantDist={5} options={ballSecantOptions2} startX={-10} endX = {10} tangentX={2} ticks={500} graphRoot={ballSecantGraph2}></BallFunctionSecant>\r\n    <p> We realized that this approach wouldn’t really work to find the exact point because we would divide by zero when the points became the same. However, when we graphed the function of the slope, we could see that this division by zero was really just a removable discontinuity! </p> \r\n    <p> Because of this, we could take the limit to find what the value normally would be, and we created our derivative function! </p>\r\n    <div className=\"keyTakeaway\">\r\n    <h2 className=\"takeawaytitle\"> Key Takeaway - Limit Definition of Derivative </h2>\r\n    <TeX className=\"math\" math=\"\\lim_{h \\to 0} \\frac{f(x+h) - f(x)}{h}\" block/>\r\n    </div>\r\n    <p> Even though it looks a little complicated, its important to remember that the whole thing is just an excuse to push the two points as close together as possible. The limit, the function notation, all of it just helps us to push the points as close together as we can. </p>\r\n    <p> So, what can we do with our new equation? </p> \r\n    <p> We can use it to find the slope at a specific point like we just did, but we can also use it to find a function. </p>\r\n    <p> If we substitute x as a variable instead of as a specific number, we can do a little algebra, and find the function for the slope for every point in the previous equation.</p>\r\n    <p> Let's try it for <TeX className=\"math\" math = \"f(x) = x^2\"/></p>\r\n    <TeX className=\"math\" math=\"\\lim_{h \\to 0} \\frac{f(x+h) - f(x)}{h}\" block/>\r\n    <p> First we'll take our original equation, then substitute a few things: </p>\r\n    <TeX className=\"math\" math=\"\\lim_{h \\to 0} \\: \\frac{(x+h)^2 - x^2}{h}\" block />\r\n    <p> Next we expand the squared parentheses: </p>\r\n    <TeX className=\"math\" math=\"\\lim_{h \\to 0} \\: \\frac{x^2 +2xh + h^2 - x^2}{h}\" block />\r\n    <p> The postive and negative <TeX className=\"math\" math = \"f(x) = x^2\"/> cancel each other out. </p>\r\n    <TeX className=\"math\" math=\"\\lim_{h \\to 0} \\: \\frac{2xh + h^2}{h}\" block/>\r\n    <p> We can divide by h because each term in the numerator has an h, and we can cancel the h in each of them out.</p>\r\n    <TeX className=\"math\" math=\"\\lim_{h \\to 0} \\: 2x + h\" block/>\r\n    <p> Lastly, we just substitute 0 for h. Adding 0 to x does nothing, so we're just left with:</p>\r\n    <TeX className=\"math\" math=\"2x\" block/>\r\n    <p> This equation fits with what we just did! This equation gives us a slope of 4 when x=2, which is exactly what we found earlier. </p>\r\n    <TangentOverGraph options={tangentOverGraphOptions1} tangentX = {2}></TangentOverGraph>\r\n    <p> We can try one more just to prove the relation: <TeX className=\"math\" math=\"4x^3-2x^2-7x+2\"/> </p>\r\n    <p> Again, we first take our original equation: </p>\r\n    <TeX className=\"math\" math=\"\\lim_{h \\to 0} \\frac{f(x+h) - f(x)}{h}\" block/>\r\n    <p> Then substitute (this one's a little longer): </p>\r\n    <TeX className=\"math\" math=\"\\lim_{h \\to 0} \\: \\frac{[4(x+h)^3 - 2(x+h)^2 - 7(x+h) + 2] - [4x^3 - 2x^2 - 7x + 2]}{h}\" block />\r\n    <p> Now we have to expand the cubes and squares: </p>  \r\n    <TeX className=\"math\" math=\"\\lim_{h \\to 0} \\: \\frac{[4x^3 + 12x^2h + 12xh^2 + 4h^3 - 2x^2 - 4xh - 2h^2 - 7x - 7h + 2] - [4x^3 - 2x^2 - 7x + 2]}{h}\" block />\r\n    <p> We can finally start canceling out: </p>\r\n    <TeX className=\"math\" math=\"\\lim_{h \\to 0} \\: \\frac{[12x^2h + 12xh^2 + 4h^3 - 4xh - 2h^2 - 7h]}{h}\" block />\r\n    <p> Now, cancel the h: </p>\r\n    <TeX className=\"math\" math=\"\\lim_{h \\to 0} \\: [12x^2 + 12xh + 4h^2 - 4x - 2h - 7]\" block />\r\n    <p> And finally, we substitute 0 for h: </p>\r\n    <TeX className=\"math\" math=\"12x^2 + 0 + 0 - 4x - 0 - 7 = 12x^2 - 4x - 7\" block />\r\n    <TangentOverGraph options={tangentOverGraphOptions2} tangentX = {2}></TangentOverGraph>\r\n    <p> It is amazing that this works.  </p>\r\n    <p> The derivative is the foundation of higher mathematics and physics, and it is really cool that it really is just pushing two points as close together as they will go.</p>\r\n    <div className=\"keyTakeaway\">\r\n    <h2 className=\"takeawaytitle\"> Key Takeaway - Limit Definition of Derivative </h2>\r\n    <TeX className=\"math\" math=\"\\lim_{h \\to 0} \\frac{f(x+h) - f(x)}{h}\" block/>\r\n    <p> Calculus can be really complex. There are millions of rules and theorems to remember. It's enough to make you go insane. Just remember, it sometimes is as easy as just pushing two things together as hard as you can.</p>\r\n    </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default DerivativeComp;\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals(console.log);","import React from 'react';\r\nimport functionPlot from 'function-plot';\r\nimport {evaluate, sin} from 'mathjs';\r\nimport * as d3 from 'd3';\r\nimport JXGBoard from 'jsxgraph-react-js';\r\n\r\nlet testOptions = {\r\n    target: '#testPlot',\r\n    xAxis: {domain: [-2, 12]},\r\n    data: [{\r\n        fn: '3 + sin(x)',\r\n        range: [2, 8],\r\n        closed: true\r\n    }]    \r\n}\r\n\r\ninterface CoverageProps {\r\n    function: string,\r\n    domain: number[],\r\n    range: number[],\r\n    id: string\r\n}\r\n\r\ninterface RectangleCoverageState {\r\n    fn: string,\r\n    domain: number[],\r\n    options: any\r\n}\r\n\r\nclass RectangleCoverage extends React.Component<CoverageProps> {\r\n    public state:RectangleCoverageState = {\r\n        fn: this.props.function,\r\n        domain: this.props.domain,\r\n        options: {\r\n            target: '#' + this.props.id,\r\n            skipTip: true,\r\n            xAxis: {domain: this.props.domain},\r\n            yAxis: {domain: this.props.range},\r\n            disableZoom: true,\r\n            data: [{\r\n                fn: this.props.function,\r\n                range: this.props.domain,\r\n                closed: true,\r\n            }]\r\n        },\r\n    }\r\n    // Rects MUST BE a whole, positive number\r\n    // Formula for LRAM\r\n    changeRectNo(rects:number) {\r\n        let newState = Object.assign({}, this.state); \r\n        newState.options.data = [{\r\n            fn: this.props.function,\r\n            range: this.props.domain,\r\n            closed: true,\r\n        }];\r\n        console.log(newState.options.data);\r\n        let length = this.state.domain[1] - this.state.domain[0];\r\n        let increment = length / rects;\r\n        let currentX;\r\n        let newRect; // this.state.options.data array element\r\n        for (let rect = 0; rect < rects; rect++) {\r\n            currentX = this.state.domain[0] + rect * increment;\r\n            newRect = {\r\n                fn: String(evaluate(this.props.function,{x:currentX})),\r\n                range: [currentX, currentX + increment],\r\n                closed: true,\r\n                color: 'red',\r\n            }\r\n            newState.options.data.push(newRect);\r\n            this.state = newState;\r\n        }\r\n        functionPlot(this.state.options);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <div id={this.props.id}></div>\r\n                <input type = \"range\" id=\"rectslider\" name = \"rect\" min = \"1\" max = \"20\" step =\"1\" defaultValue = {1} onChange={(event) => this.changeRectNo(parseFloat(event.target.value))}></input>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        this.changeRectNo(1);\r\n        functionPlot(this.state.options);\r\n    }\r\n}\r\n\r\nclass D3TestClass extends React.Component {\r\n    render() {\r\n        return(\r\n            <svg height={400} width={400} id=\"testSVG\"></svg>\r\n        )\r\n    }\r\n    componentDidMount() {\r\n        d3.select(\"#testSVG\")\r\n            .append(\"circle\")\r\n            .attr(\"r\", 32)\r\n            .attr(\"cx\", 40)\r\n            .attr(\"cy\", 40)\r\n            .attr(\"fill\", \"green\");\r\n    }\r\n}\r\n\r\nfunction handmadeRiemann(board: any, method: string,) {\r\n    board.suspendUpdate()\r\n    let rects = 15;\r\n    let leftX = 0;\r\n    let rightX = Math.PI/3;\r\n    let width = rightX - leftX;\r\n    let rectWidth =  width/rects;\r\n    function graphFunc(t:number) {\r\n        return 2 * Math.sin(t) * Math.cos(t);\r\n    }\r\n    let graph =  board.create('functiongraph', [function(t:number) {\r\n                    return graphFunc(t);\r\n    },-10,10])\r\n    for (var i = 0; i < rects; i++) {\r\n        var x = i * rectWidth;\r\n        let p1 = board.create('point', [x,graphFunc(x)], {size: 0, withLabel: false, fixed: true, highlight: false});//top left\r\n        let p2 = board.create('point', [x,-1], {size: 0, withLabel: false, fixed: true, highlight: false}); // Bottom Left\r\n        let p3 = board.create('point', [x+rectWidth, -1], {size: 0, withLabel: false, fixed: true, highlight: false}); // Bottom Right\r\n        let p4 = board.create('point', [x+rectWidth,graphFunc(x)], {size: 0, withLabel: false, fixed: true, highlight: false}); // Top Right\r\n        var pgon = board.create('polygon', [p1,p2,p3,p4], {fillColor:'steelblue', fillOpacity:0.3, fixed: true, highlight: false,\r\n        borders: {\r\n            highlight: false,\r\n        }});\r\n        \r\n        //pgon.borders.setAttribute({\r\n        //    highlight: false,\r\n        //})\r\n\r\n    }\r\n    board.unsuspendUpdate();\r\n}\r\n\r\nfunction logicJS(brd: any) {\r\n    brd.suspendUpdate();\r\n    function f(x:number) {\r\n        return sin(x/8 - 11)*10;\r\n    }\r\n    var g = brd.create('functiongraph', [f],{draggable: false, highlight: false,});\r\n    var rectNo =  brd.create('slider', [[-11,9], [-7, 9], [1,1,100]], {name:\"Rect. No\", snapWidth: 1});\r\n    var os = brd.create('riemannsum',[f,\r\n        function(){return rectNo.Value();}, \r\n        function(){return \"right\";},\r\n        function(){return -12;},\r\n        function(){return 12;}\r\n        ],\r\n        {fillColor:'steelblue', fillOpacity:0.3, draggable: false, highlight: false});\r\n    brd.unsuspendUpdate();    \r\n}\r\n\r\n\r\n// Full Page export component\r\nconst Integral = () => {\r\n    return(\r\n        <div>\r\n            <JXGBoard\r\n                logic={handmadeRiemann}\r\n                boardAttributes={{ axis: false, drag: {\r\n                    enabled: false,\r\n                }, boundingbox: [-12, 11, 12, 0], registerEvents: true, }}\r\n                style={{\r\n                    border: \"3px solid black\",\r\n                    width: \"1000px\"\r\n                }}\r\n            />\r\n            <D3TestClass></D3TestClass>\r\n        </div>\r\n    )\r\n}\r\nexport default Integral;","import React from 'react';\r\nimport DerivativeComp from './derivativecomp';\r\nimport Integral from './integral'\r\nimport { Switch, Route, Link } from 'react-router-dom';\r\n\r\n\r\nconst App = () => (\r\n  <div className='app'>\r\n    <Switch> {/* The Switch decides which component to show based on the current URL.*/}\r\n      <Route exact path='/derivative' component={DerivativeComp}></Route>\r\n      <Route exact path='/integral' component={Integral}></Route>\r\n    </Switch>  </div>\r\n);\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport functionPlot from 'function-plot';\r\nimport {derivative,evaluate} from 'mathjs';\r\nimport 'katex/dist/katex.min.css';\r\nimport TeX from '@matejmazur/react-katex';\r\nimport App from './app';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\n\r\nReactDOM.render((\r\n  <BrowserRouter>\r\n    <App /> {/* The various pages will be displayed by the `Main` component. */}\r\n  </BrowserRouter>\r\n  ), document.getElementById('root')\r\n);"],"sourceRoot":""}