(this.webpackJsonpderivative=this.webpackJsonpderivative||[]).push([[0],{118:function(t,e,a){},177:function(t,e){},182:function(t,e,a){"use strict";a.r(e);var s=a(11),n=a(12),i=a(18),o=a(19),c=a(10),h=a.n(c),r=a(108),p=a.n(r),l=(a(118),function(t){t&&t instanceof Function&&a.e(3).then(a.bind(null,187)).then((function(e){var a=e.getCLS,s=e.getFID,n=e.getFCP,i=e.getLCP,o=e.getTTFB;a(t),s(t),n(t),i(t),o(t)}))}),b=a(3),x=a.n(b),j=a(186),d=(a(168),a(2)),u=a(0),f="x*x",g="hgraph",O="riseroot1",v="riseroot2",m="ball1",y="ballsecant1",w="ballsecant2",k=(window.innerHeight,.6*window.innerWidth),T=4*k/8,X={target:"#riseroot1",grid:!0,width:k,height:T,data:[{fn:"2x",color:"steelblue"},{vector:[10,0],offset:[0,0],graphType:"polyline",fnType:"vector"},{vector:[0,20],offset:[10,0],graphType:"polyline",fnType:"vector"}]},N={target:"#riseroot2",grid:!0,width:k,height:T,data:[{fn:"x^2",color:"steelblue"},{vector:[2,0],offset:[0,0],graphType:"polyline",fnType:"vector"},{vector:[0,4],offset:[2,0],graphType:"polyline",fnType:"vector"}]},S=(Object(j.b)(f,{x:0}),Object(j.b)(f,{x:5}),Object(j.b)(f,{x:0}),Object(j.b)(f,{x:0}),{target:"#hgraph",grid:!0,width:k,height:T,data:[{fn:f,secants:[{x0:0,x1:5}],color:"steelblue"},{vector:[5,0],offset:[0,Object(j.b)(f,{x:0})],graphType:"polyline",fnType:"vector"},{vector:[0,Object(j.b)(f,{x:5})-Object(j.b)(f,{x:0})],offset:[5,Object(j.b)(f,{x:0})],graphType:"polyline",fnType:"vector"}]}),_={target:"#ball1",grid:!0,width:k,height:T,data:[{points:[],graphType:"polyline",fnType:"points"},{points:[],graphType:"scatter",fnType:"points"},{fn:"sin(x)",skipTip:!0,nSamples:100,graphType:"scatter"}]},F={target:"#ballsecant1",grid:!0,width:k,height:T,data:[{points:[],graphType:"polyline",fnType:"points"},{points:[],graphType:"scatter",fnType:"points"},{fn:"cos(x)",skipTip:!0,nSamples:100,graphType:"scatter",secants:[]},{points:[],graphType:"polyline",fnType:"points"}]},D={target:"#ballsecant2",grid:!0,width:k,height:T,data:[{points:[],graphType:"polyline",fnType:"points"},{points:[],graphType:"scatter",fnType:"points"},{fn:"2x^2 + 3",skipTip:!0,nSamples:100,graphType:"scatter",secants:[]},{points:[],graphType:"polyline",fnType:"points"}]},C={target:"#basicGraph",grid:!0,width:k,height:T,data:[{fn:"4x-4",skipTip:!0},{fn:"x^2",skipTip:!0},{vector:[1,0],offset:[2,4],graphType:"polyline",fnType:"vector"},{vector:[0,4],offset:[3,4],graphType:"polyline",fnType:"vector"}]},q={target:"#tangentOverGraph1",grid:!0,width:k,height:T,data:[{fn:"x^2",skipTip:!0,derivative:{fn:"2*x",x0:2},graphType:"interval"},{vector:[1,0],offset:[2,4],graphType:"polyline",fnType:"vector"},{vector:[0,4],offset:[3,4],graphType:"polyline",fnType:"vector"}]},W={target:"#tangentOverGraph2",grid:!0,width:k,height:T,data:[{fn:"4*x^3-2*x^2-7*x+2",skipTip:!0,derivative:{fn:"12*x^2 - 4*x - 7",x0:2},graphType:"interval"},{vector:[1,0],offset:[2,4],graphType:"polyline",fnType:"vector"},{vector:[0,4],offset:[3,4],graphType:"polyline",fnType:"vector"}]};function A(t){return Math.round(1e3*(t+Number.EPSILON))/1e3}h.a.Component;var M=function(t){Object(i.a)(a,t);var e=Object(o.a)(a);function a(){var t;Object(s.a)(this,a);for(var n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))).state={fn:t.props.fn,derivative:Object(j.a)(t.props.fn,"x").toString(),h:t.props.h,x:t.props.x,slope:(Object(j.b)(t.props.fn,{x:t.props.x+t.props.h})-Object(j.b)(t.props.fn,{x:t.props.x}))/t.props.h,trueSlope:Object(j.b)(Object(j.a)(t.props.fn,"x").toString(),{x:t.props.x}),graphRoot:t.props.graphRoot,options:t.props.options},t}return Object(n.a)(a,[{key:"componentDidMount",value:function(){x()(this.props.options)}},{key:"changeFn",value:function(t){try{if(""!==t){var e=Object.assign({},this.state),a=e.x,s=e.h,n=Object(j.b)(t,{x:a+s})-Object(j.b)(t,{x:a});e.options.data[0].fn=t,e.fn=t,e.derivative=Object(j.a)(t,"x").toString(),e.options.data[0].secants[0]={x0:a,x1:a+s},e.options.data[1].vector=[s,0],e.options.data[1].offset=[a,Object(j.b)(t,{x:a})],e.options.data[2].vector=[0,n],e.options.data[2].offset=[a+s,Object(j.b)(t,{x:a})],e.slope=n/s,e.trueSlope=Object(j.b)(e.derivative,{x:a}),this.setState(e)}x()(this.state.options)}catch(i){console.log(i)}}},{key:"changeH",value:function(t){var e=this.state.x,a=this.state.fn,s=Object.assign({},this.state),n=Object(j.b)(a,{x:e+t})-Object(j.b)(a,{x:e});s.options.data[1].vector=[t,0],s.options.data[2].vector=[0,n],s.options.data[2].offset=[e+t,Object(j.b)(a,{x:e})],s.options.data[0].secants[0]={x0:e,x1:e+t},s.slope=n/t,s.h=t,this.setState(s),x()(this.state.options)}},{key:"changeX",value:function(t){var e=this.state.h,a=this.state.fn,s=Object.assign({},this.state),n=Object(j.b)(a,{x:t+e})-Object(j.b)(a,{x:t});s.options.data[1].offset=[t,Object(j.b)(a,{x:t})],s.options.data[2].vector=[0,Object(j.b)(a,{x:t+e})-Object(j.b)(a,{x:t})],s.options.data[2].offset=[t+e,Object(j.b)(a,{x:t})],s.options.data[0].secants[0]={x0:t,x1:t+e},s.slope=n/e,s.trueSlope=Object(j.b)(s.derivative,{x:t}),s.x=t,this.setState(s),x()(this.state.options)}},{key:"render",value:function(){var t=this,e=String("m_{calculated} \\: = \\:"+A(this.state.slope)+"\\: = \\frac{\\color{#4682b4}"+A(Object(j.b)(this.state.fn,{x:this.state.x+this.state.h}))+"\\color{#000} - \\: \\color{#b47846}"+A(Object(j.b)(this.state.fn,{x:this.state.x}))+"\\color{#000}}{\\color{#bd3c4b}"+this.state.h+"} \\: ~ \\: m_{true} \\: = \\: "+A(this.state.trueSlope));return Object(u.jsxs)("div",{id:"container",children:[Object(u.jsx)("div",{id:this.state.graphRoot}),Object(u.jsx)(d.a,{className:"math",math:e,block:!0}),Object(u.jsxs)("div",{className:"sliders",children:[Object(u.jsx)("input",{type:"range",id:"hslider",name:"h",min:"0.01",max:"10",step:"0.1",defaultValue:this.props.h,onChange:function(e){return t.changeH(parseFloat(e.target.value))}}),Object(u.jsx)("input",{type:"range",id:"xslider",name:"x",min:"-10",max:"10",step:"0.1",defaultValue:this.props.x,onChange:function(e){return t.changeX(parseFloat(e.target.value))}}),Object(u.jsx)("input",{type:"text",id:"editing",defaultValue:this.props.fn,onChange:function(e){return t.changeFn(e.target.value)}})]})]})}}]),a}(h.a.Component),R=function(t){Object(i.a)(a,t);var e=Object(o.a)(a);function a(){var t;Object(s.a)(this,a);for(var n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))).state={fn:t.props.fn,derivative:t.props.derivative,x2:t.props.x2,x1:t.props.x1,options:t.props.options},t}return Object(n.a)(a,[{key:"componentDidMount",value:function(){x()(this.props.options)}},{key:"changeX2",value:function(t){var e=this.state.fn,a=this.state.x1,s=t,n=Object.assign({},this.state),i=Object(j.b)(e,{x:s})-Object(j.b)(e,{x:a});n.options.data[1].vector=[s-a,0],n.options.data[2].vector=[0,i],n.options.data[2].offset=[s,Object(j.b)(e,{x:a})],n.x2=s,this.setState(n),x()(this.state.options)}},{key:"changeX1",value:function(t){var e=this.state.fn,a=t,s=this.state.x2,n=Object.assign({},this.state),i=Object(j.b)(e,{x:s})-Object(j.b)(e,{x:a});n.options.data[1].vector=[s-a,0],n.options.data[1].offset=[a,Object(j.b)(e,{x:a})],n.options.data[2].vector=[0,i],n.options.data[2].offset=[s,Object(j.b)(e,{x:a})],n.x1=a,this.setState(n),x()(this.state.options)}},{key:"render",value:function(){var t=this;return Object(u.jsxs)("div",{children:[Object(u.jsx)("div",{id:this.props.graphRoot,onLoad:function(){return x()(t.props.options)}}),Object(u.jsx)(d.a,{className:"math",math:"m = "+A((Object(j.b)(this.state.fn,{x:this.state.x2})-Object(j.b)(this.state.fn,{x:this.state.x1}))/(this.state.x2-this.state.x1))+"\\: = \\:\\frac{\\color{#4682b4}"+A(Object(j.b)(this.state.fn,{x:this.state.x2}))+"\\color{#000} \\: - \\: \\color{#b47846}"+A(Object(j.b)(this.state.fn,{x:this.state.x1}))+"\\color{#000}}{\\color{#4682b4}"+this.state.x2+"\\color{#000} \\: - \\: \\color{#b47846}"+this.state.x1+"}",block:!0}),Object(u.jsxs)("div",{className:"sliders",children:[Object(u.jsx)("input",{type:"range",id:"x1slider",name:"x",min:"-10",max:"10",step:"0.1",defaultValue:this.props.x1,onChange:function(e){return t.changeX1(parseFloat(e.target.value))}}),Object(u.jsx)("input",{type:"range",id:"x2slider",name:"x",min:"-10",max:"10",step:"0.1",defaultValue:this.props.x2,onChange:function(e){return t.changeX2(parseFloat(e.target.value))}})]})]})}}]),a}(h.a.Component),L=function(t){Object(i.a)(a,t);var e=Object(o.a)(a);function a(){var t;Object(s.a)(this,a);for(var n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))).state={fn:t.props.fn,derivative:t.props.derivative,x2:t.props.x2,x1:t.props.x1,options:t.props.options},t}return Object(n.a)(a,[{key:"componentDidMount",value:function(){x()(this.props.options)}},{key:"changeFn",value:function(t){try{var e=this.state.x1,a=this.state.x2,s=Object.assign({},this.state),n=Object(j.b)(t,{x:a})-Object(j.b)(t,{x:e});s.options.data[1].vector=[a-e,0],s.options.data[1].offset=[e,Object(j.b)(t,{x:e})],s.options.data[2].vector=[0,n],s.options.data[2].offset=[a,Object(j.b)(t,{x:e})],s.fn=t,s.options.data[0].fn=t,s.derivative=Object(j.a)(t,"x").toString(),this.setState(s),x()(this.state.options)}catch(i){console.log(i)}}},{key:"changeX2",value:function(t){var e=this.state.fn,a=this.state.x1,s=t,n=Object.assign({},this.state),i=Object(j.b)(e,{x:s})-Object(j.b)(e,{x:a});n.options.data[1].vector=[s-a,0],n.options.data[2].vector=[0,i],n.options.data[2].offset=[s,Object(j.b)(e,{x:a})],n.x2=s,this.setState(n),x()(this.state.options)}},{key:"changeX1",value:function(t){var e=this.state.fn,a=t,s=this.state.x2,n=Object.assign({},this.state),i=Object(j.b)(e,{x:s})-Object(j.b)(e,{x:a});n.options.data[1].vector=[s-a,0],n.options.data[1].offset=[a,Object(j.b)(e,{x:a})],n.options.data[2].vector=[0,i],n.options.data[2].offset=[s,Object(j.b)(e,{x:a})],n.x1=a,this.setState(n),x()(this.state.options)}},{key:"render",value:function(){var t=this;return Object(u.jsxs)("div",{children:[Object(u.jsx)("div",{id:this.props.graphRoot,onLoad:function(){return x()(t.props.options)}}),Object(u.jsx)(d.a,{className:"math",math:"m = "+A((Object(j.b)(this.state.fn,{x:this.state.x2})-Object(j.b)(this.state.fn,{x:this.state.x1}))/(this.state.x2-this.state.x1))+"\\: = \\:\\frac{\\color{#4682b4}"+A(Object(j.b)(this.state.fn,{x:this.state.x2}))+"\\color{#000} \\: - \\: \\color{#b47846}"+A(Object(j.b)(this.state.fn,{x:this.state.x1}))+"\\color{#000}}{\\color{#4682b4}"+this.state.x2+"\\color{#000} \\: - \\: \\color{#b47846}"+this.state.x1+"}",block:!0}),Object(u.jsxs)("div",{className:"sliders",children:[Object(u.jsx)("input",{type:"range",id:"x1slider",name:"x",min:"-10",max:"10",step:"0.1",defaultValue:this.props.x1,onChange:function(e){return t.changeX1(parseFloat(e.target.value))}}),Object(u.jsx)("input",{type:"range",id:"x2slider",name:"x",min:"-10",max:"10",step:"0.1",defaultValue:this.props.x2,onChange:function(e){return t.changeX2(parseFloat(e.target.value))}}),Object(u.jsx)("input",{type:"text",id:"fninput",defaultValue:this.props.fn,onChange:function(e){return t.changeFn(e.target.value)}})]})]})}}]),a}(h.a.Component),I=function(t){Object(i.a)(a,t);var e=Object(o.a)(a);function a(){var t;Object(s.a)(this,a);for(var n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))).state={fn:t.props.fn,derivative:t.props.derivative,tangent:Object(j.b)(t.props.derivative,{x:t.props.tangentX})+"x + "+(Object(j.b)(t.props.fn,{x:t.props.tangentX})-Object(j.b)(t.props.derivative,{x:t.props.tangentX})*t.props.tangentX),tangentX:t.props.tangentX,options:t.props.options,tick:0,on:!1,increment:Math.abs(t.props.endX-t.props.startX)/t.props.ticks},t}return Object(n.a)(a,[{key:"componentDidMount",value:function(){x()(this.props.options)}},{key:"handleToggle",value:function(){!1===this.state.on?this.turnOn():this.turnOff()}},{key:"reset",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"joebiden",e=Object.assign({},this.state);"joebiden"!==t&&(e.fn=t,e.options.data[0].fn=t,e.options.data[2].fn=t,e.derivative=Object(j.a)(t,"x").toString(),e.tangent=Object(j.b)(e.derivative,{x:e.tangentX})+"x + "+(Object(j.b)(e.fn,{x:e.tangentX})-Object(j.b)(e.derivative,{x:e.tangentX})*e.tangentX)),e.options.data[0].points=[[this.props.startX,Object(j.b)(e.fn,{x:this.props.startX})]],e.tick=0,e.on=!1,this.setState(e),x()(this.state.options)}},{key:"stateExec",value:function(t){console.log("set state executed "+t),console.log(this.state.options.data[0].fn),console.log(this.state.fn)}},{key:"changeFn",value:function(t){try{""!==t&&this.reset(t)}catch(e){console.log(e)}}},{key:"changeTanX",value:function(t){try{for(var e,a,s=Object(j.b)(this.state.derivative,{x:t})+"x + "+(Object(j.b)(this.state.fn,{x:t})-Object(j.b)(this.state.derivative,{x:t})*t),n=[],i=0;i<this.props.ticks;i++){var o=this.props.startX+i*this.state.increment;if(!(o<t))break;a=Object(j.b)(this.state.fn,{x:o}),n.push([o,a])}e=1e5,a=Object(j.b)(s,{x:e}),n.push([e,a]);var c=Object.assign({},this.state);c.tangent=s,c.tangentX=t,c.options.data[0].points=n,c.options.data[1].points=[[t,Object(j.b)(s,{x:t})]],this.setState(c),x()(this.state.options)}catch(h){console.log(h)}}},{key:"turnOn",value:function(){var t=Object.assign({},this.state);0===Object(j.b)(this.props.derivative,{x:this.state.tangentX})&&(t.tangent=String(Object(j.b)(this.state.fn,{x:this.state.tangentX})-Object(j.b)(this.state.derivative,{x:this.state.tangentX})*this.state.tangentX)),t.options.data[1].points=[[this.state.tangentX,Object(j.b)(this.state.fn,{x:this.state.tangentX})]],t.on=!0,t.tick++,this.setState(t),x()(this.state.options),requestAnimationFrame(this.update.bind(this))}},{key:"turnOff",value:function(){var t=Object.assign({},this.state);t.on=!1,this.setState(t)}},{key:"update",value:function(){if(this.state.on){var t=Object.assign({},this.state);if(this.state.tick<this.props.ticks){var e,a=this.props.startX+this.state.increment*this.state.tick;console.log(a),console.log(Object(j.b)(this.state.tangent,{x:a})),a>this.state.tangentX?(console.log(Object(j.b)(this.state.tangent,{x:a})),e=Object(j.b)(this.state.tangent,{x:a})):e=Object(j.b)(this.state.fn,{x:a}),t.options.data[0].points.push([a,e]),t.tick+=1,console.log(this.state.tangent),this.setState(t),x()(this.state.options),requestAnimationFrame(this.update.bind(this))}else t.on=!1,this.setState(t)}}},{key:"render",value:function(){var t=this;return Object(u.jsxs)("div",{children:[Object(u.jsx)("div",{id:this.props.graphRoot}),Object(u.jsxs)("div",{className:"sliders",children:[Object(u.jsx)("input",{type:"text",onChange:function(e){return t.changeFn(e.target.value)},defaultValue:this.props.fn}),Object(u.jsx)("input",{type:"range",onChange:function(e){return t.changeTanX(parseFloat(e.target.value))},defaultValue:this.props.tangentX,min:this.props.startX,max:this.props.endX,step:this.state.increment})]})]})}}]),a}(h.a.Component),V=function(t){Object(i.a)(a,t);var e=Object(o.a)(a);function a(){var t;Object(s.a)(this,a);for(var n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))).state={fn:t.props.fn,derivative:t.props.derivative,secantDist:t.props.secantDist,tangent:Object(j.b)(t.props.derivative,{x:t.props.tangentX})+"x + "+(Object(j.b)(t.props.fn,{x:t.props.tangentX})-Object(j.b)(t.props.derivative,{x:t.props.tangentX})*t.props.tangentX),tangentX:t.props.tangentX,options:t.props.options,tick:0,on:!1,increment:Math.abs(t.props.endX-t.props.startX)/t.props.ticks},t}return Object(n.a)(a,[{key:"componentDidMount",value:function(){x()(this.props.options)}},{key:"handleToggle",value:function(){!1===this.state.on?this.turnOn():this.turnOff()}},{key:"reset",value:function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:"joebiden",e=Object.assign({},this.state);"joebiden"!==t&&(e.fn=t,e.options.data[0].fn=t,e.options.data[2].fn=t,e.derivative=Object(j.a)(t,"x").toString(),e.tangent=Object(j.b)(e.derivative,{x:e.tangentX})+"x + "+(Object(j.b)(e.fn,{x:e.tangentX})-Object(j.b)(e.derivative,{x:e.tangentX})*e.tangentX)),e.options.data[0].points=[[this.props.startX,Object(j.b)(e.fn,{x:this.props.startX})]],e.tick=0,e.on=!1,this.setState(e),x()(this.state.options)}},{key:"stateExec",value:function(t){console.log("set state executed "+t),console.log(this.state.options.data[0].fn),console.log(this.state.fn)}},{key:"changeFn",value:function(t){try{""!==t&&this.reset(t)}catch(e){console.log(e)}}},{key:"changeTanX",value:function(t){try{for(var e,a,s=Object(j.b)(this.state.derivative,{x:t})+"x + "+(Object(j.b)(this.state.fn,{x:t})-Object(j.b)(this.state.derivative,{x:t})*t),n=[],i=0;i<this.props.ticks;i++){var o=this.props.startX+i*this.state.increment;if(!(o<t))break;a=Object(j.b)(this.state.fn,{x:o}),n.push([o,a])}e=1e5,a=Object(j.b)(s,{x:e}),n.push([e,a]);var c=Object.assign({},this.state);c.tangent=s,c.tangentX=t,c.options.data[0].points=n,c.options.data[1].points=[[t,Object(j.b)(s,{x:t})]];var h=[c.tangentX-c.secantDist,Object(j.b)(c.fn,{x:c.tangentX-c.secantDist})],r=[c.tangentX+c.secantDist,Object(j.b)(c.fn,{x:c.tangentX+c.secantDist})];c.options.data[3].points=[],c.options.data[3].points.push(h),c.options.data[3].points.push(r),c.options.data[2].secants=[{x0:h[0],x1:r[0]}],this.setState(c),x()(this.state.options)}catch(p){console.log(p)}}},{key:"changeSecantDist",value:function(t){try{var e=Object.assign({},this.state);e.secantDist=t;var a=[e.tangentX-t,Object(j.b)(e.fn,{x:e.tangentX-t})],s=[e.tangentX+t,Object(j.b)(e.fn,{x:e.tangentX+t})];e.options.data[3].points=[],e.options.data[3].points.push(a),e.options.data[3].points.push(s),e.options.data[2].secants=[{x0:a[0],x1:s[0]}],this.setState(e),x()(this.state.options)}catch(n){console.log(n)}}},{key:"turnOn",value:function(){var t=Object.assign({},this.state);0===Object(j.b)(this.props.derivative,{x:this.state.tangentX})&&(t.tangent=String(Object(j.b)(this.state.fn,{x:this.state.tangentX})-Object(j.b)(this.state.derivative,{x:this.state.tangentX})*this.state.tangentX)),t.options.data[1].points=[[this.state.tangentX,Object(j.b)(this.state.fn,{x:this.state.tangentX})]],t.on=!0,t.tick++,this.setState(t),x()(this.state.options),requestAnimationFrame(this.update.bind(this))}},{key:"turnOff",value:function(){var t=Object.assign({},this.state);t.on=!1,this.setState(t)}},{key:"update",value:function(){if(this.state.on){var t=Object.assign({},this.state);if(this.state.tick<this.props.ticks){var e,a=this.props.startX+this.state.increment*this.state.tick;console.log(a),console.log(Object(j.b)(this.state.tangent,{x:a})),a>this.state.tangentX?(console.log(Object(j.b)(this.state.tangent,{x:a})),e=Object(j.b)(this.state.tangent,{x:a})):e=Object(j.b)(this.state.fn,{x:a}),t.options.data[0].points.push([a,e]),t.tick+=1,console.log(this.state.tangent),this.setState(t),x()(this.state.options),requestAnimationFrame(this.update.bind(this))}else t.on=!1,this.setState(t)}}},{key:"render",value:function(){var t=this;return Object(u.jsxs)("div",{children:[Object(u.jsx)("div",{id:this.props.graphRoot}),Object(u.jsxs)("div",{className:"sliders",children:[Object(u.jsx)("input",{type:"text",onChange:function(e){return t.changeFn(e.target.value)},defaultValue:this.props.fn}),Object(u.jsx)("div",{className:"slider",children:Object(u.jsx)("input",{type:"range",onChange:function(e){return t.changeTanX(parseFloat(e.target.value))},defaultValue:0,min:this.props.startX,max:this.props.endX,step:this.state.increment})}),Object(u.jsx)("div",{className:"slider",children:Object(u.jsx)("input",{type:"range",onChange:function(e){return t.changeSecantDist(parseFloat(e.target.value))},defaultValue:this.props.secantDist,min:.1,max:5,step:.1})})]})]})}}]),a}(h.a.Component),z=function(t){Object(i.a)(a,t);var e=Object(o.a)(a);function a(){return Object(s.a)(this,a),e.apply(this,arguments)}return Object(n.a)(a,[{key:"componentDidMount",value:function(){var t={target:"#"+this.props.graphRoot,grid:!0,width:k,height:T,disableZoom:!0,yAxis:{domain:[2,8]},xAxis:{domain:[-5,5]},data:[{fn:this.props.fn,color:"steelblue"},{x:"cos(t)/16",y:"sin(t)/16 + 4",fnType:"parametric",graphType:"polyline",color:"steelblue"}]};x()(t)}},{key:"render",value:function(){return Object(u.jsx)("div",{id:this.props.graphRoot})}}]),a}(h.a.Component),P=function(t){Object(i.a)(a,t);var e=Object(o.a)(a);function a(){return Object(s.a)(this,a),e.apply(this,arguments)}return Object(n.a)(a,[{key:"componentDidMount",value:function(){x()(this.props.options)}},{key:"render",value:function(){return Object(u.jsx)("div",{id:this.props.options.target.slice(1)})}}]),a}(h.a.Component),E=function(t){Object(i.a)(a,t);var e=Object(o.a)(a);function a(){var t;Object(s.a)(this,a);for(var n=arguments.length,i=new Array(n),o=0;o<n;o++)i[o]=arguments[o];return(t=e.call.apply(e,[this].concat(i))).state={options:t.props.options,tangentX:t.props.tangentX},t}return Object(n.a)(a,[{key:"componentDidMount",value:function(){x()(this.state.options)}},{key:"changeTanX",value:function(t){var e=Object.assign({},this.state),a=e.options.data[0].fn,s=e.options.data[0].derivative.fn;e.options.data[0].derivative.x0=t,e.options.data[1].offset=[t,Object(j.b)(a,{x:t})],e.options.data[2].vector=[0,Object(j.b)(s,{x:t})],e.options.data[2].offset=[t+1,Object(j.b)(a,{x:t})],e.tangentX=t,this.setState(e),x()(this.state.options)}},{key:"render",value:function(){var t=this,e=this.state.options.data[0].fn,a=this.state.options.data[0].derivative.fn,s=this.state.tangentX;return Object(u.jsxs)("div",{className:"TangentOverGraph",children:[Object(u.jsx)("div",{id:this.state.options.target.slice(1),children:" "}),Object(u.jsx)(d.a,{className:"math",math:"m = \\color{steelblue} "+a+" \\color{#000} = \\color{steelblue} "+a.replace(/x/g,String(s))+"\\color{#000} = "+A(Object(j.b)(a,{x:s}))+" = \\frac{\\color{#05b378}"+String(A(Object(j.b)(e,{x:s})+Object(j.b)(a,{x:s})))+" - "+String(A(Object(j.b)(e,{x:s})))+"\\color{#000}}{ \\color{red}"+String(A(s+1))+" - "+String(A(s))+"}",block:!0}),Object(u.jsx)("div",{className:"sliders",children:Object(u.jsx)("div",{className:"slider",children:Object(u.jsx)("input",{type:"range",min:-10,max:10,step:.1,defaultValue:this.props.tangentX,onChange:function(e){return t.changeTanX(parseFloat(e.target.value))}})})})]})}}]),a}(h.a.Component);h.a.Component;p.a.render(Object(u.jsxs)("div",{children:[Object(u.jsx)("h1",{children:" The Derivative "}),Object(u.jsx)("p",{children:" You\u2019re probably already familiar with the concept of slope. Slope is a simple number that describes the steepness or slant of a specific line. Mathematically, you\u2019ve probably seen it defined as: "}),Object(u.jsx)(d.a,{className:"math",math:"m = \\frac{y_1 - y_2}{x_1 - x_2}",block:!0}),Object(u.jsx)("p",{children:" Or: "}),Object(u.jsx)(d.a,{className:"math",math:"m = \\frac{\\Delta y}{\\Delta x}",block:!0}),Object(u.jsx)("p",{children:" Or: "}),Object(u.jsx)(d.a,{className:"math",math:"m = \\frac{Rise}{Run}",block:!0}),Object(u.jsxs)("p",{children:[" Slope is useful for a variety of reasons. We can figure out what speed, a car for example, is moving at by finding the slope between two points in time for the car.",Object(u.jsx)("br",{}),Object(u.jsx)("br",{})," At 1:00 PM, the car was sitting in a garage, but by 3:00 PM, the car had traveled 100 miles. How fast was the car moving? "]}),Object(u.jsx)(d.a,{className:"math",math:"m = \\frac{100\\: miles\\: - \\:0\\:miles}{3 \\: hours \\: - \\: 0 \\: hours} = \\frac{50\\:miles}{hour}",block:!0}),Object(u.jsx)("p",{children:" For lines, the whole function has the same slope. The line 2x, for example, has the same slope of 2, no matter what point we look at. "}),Object(u.jsx)("div",{id:"riseruns",children:Object(u.jsx)(R,{fn:"2x",derivative:"2",x2:5,x1:0,options:X,graphRoot:O})}),Object(u.jsx)("p",{children:" Lines are simple because we know the slope at every point. It is the same as any other! But for other functions, we don\u2019t. Can we find it? "}),Object(u.jsx)("p",{children:" Maybe we can use the same equation that works for lines on the more complex curves? "}),Object(u.jsx)(L,{fn:"x^2",derivative:"2x",x2:2,x1:0,options:N,graphRoot:v}),Object(u.jsx)("p",{children:" We quickly notice a few problems with this approach. First of all, what points do we pick? If we want to find the slope at x=1, do we pick x=1 and x=2? x=0 and x=2? "}),Object(u.jsx)("p",{children:" An even bigger problem makes itself clear too. No matter what two points we pick, the slope at the point won\u2019t be quite right. "}),Object(u.jsx)("p",{children:" We can see this geometrically. We can imagine the function like a ball on a string, tracking the function. If the string is cut, the ball should move in a straight line in the same direction it was moving right before the string was cut."}),Object(u.jsx)(I,{fn:"sin(x)",derivative:"cos(x)",options:_,startX:-10,tangentX:Math.PI/2,endX:10,ticks:500,graphRoot:m}),Object(u.jsx)("p",{children:" If we want to find the line the ball should go in at any point, using a line between two points will not really work because the line of the ball only intersects the function at one point, right when the string is cut. "}),Object(u.jsx)(V,{fn:"cos(x)",derivative:"-sin(x)",secantDist:5,options:F,startX:-10,endX:10,tangentX:Math.PI/2,ticks:500,graphRoot:y}),Object(u.jsx)("p",{children:" If we zoom in close enough on any of the two point lines, we'll see that they don't exactly mirror their one point counterparts. They are always a little bit higher or lower, or have a different slope. This is a fundamental property of these two point lines, which are called secants. They will never quite match the one point lines, or tangents."}),Object(u.jsx)("p",{children:" We can see something interesting though. The closer the two points get to each other (and the point for the tangent), the closer their line is to the real path of our hypothetical ball. "}),Object(u.jsx)("p",{children:" Lets take this pattern we notice to its conclusion. What if we just had 0 distance between the points? That would solve the issue of having two points represent a line with one intersection. "}),Object(u.jsx)(d.a,{className:"math",math:"\\frac{1-1}{1-1} = \\frac{0}{0}",block:!0}),Object(u.jsx)("p",{children:" If there is 0 distance between the points, they'll just be the same, and we\u2019ll always have to divide by zero. Maybe we could see how the slope changes as the points get closer? Maybe the slope value converges to something. Let's do a little algebra and see if we can represent how the slope of the line changes based on the distance between the two points. "}),Object(u.jsx)("p",{children:" Our normal slope equation is: "}),Object(u.jsx)(d.a,{className:"math",math:"\\frac{y_2 - y_1}{x_2 - x_1}",block:!0}),Object(u.jsx)("p",{children:" We want to turn this into an equation with just two variables. The point, and the distance between it and the second point.  "}),Object(u.jsxs)("p",{children:[" First, let's do some easy substitution. We know that:  ",Object(u.jsx)(d.a,{className:"math",math:"y_2 = f(x_2)"})," and  ",Object(u.jsx)(d.a,{className:"math",math:"y_1 = f(x_1)"})," We can remove the two y variables just by making this substitution."]}),Object(u.jsxs)("p",{children:[" Next, let's just define the distance between the two x's to be h. That gets rid of another variable. ",Object(u.jsx)(d.a,{className:"math",math:"h = x_2 - x_1",block:!0})]}),Object(u.jsx)("p",{children:" After we replace the Ys with our new function notation, and the bottom difference with our new variable h, we end up with this equation: "}),Object(u.jsx)(d.a,{className:"math",math:"\\frac{f(x_2) - f(x_1)}{h}",block:!0}),Object(u.jsxs)("p",{children:[" We still want only one point, so lets rewrite the first term of the function notation. x2 is just x1 + h (the distance between the two points). We can see this algebraically as well if we add  ",Object(u.jsx)(d.a,{className:"math",math:"x_1"})," to each side of the definition of h: ",Object(u.jsx)(d.a,{className:"math",math:"x_2 = h + x_1",block:!0})," "]}),Object(u.jsxs)("p",{children:[" Once we substitute ",Object(u.jsx)(d.a,{className:"math",math:"x_2"})," , our new equation is: "]}),Object(u.jsx)(d.a,{className:"math",math:"\\frac{f(x_1+h) - f(x_1)}{h}",block:!0}),Object(u.jsx)("p",{children:" This is exactly what we wanted! An equation with one x variable and one variable for the distance between the two points."}),Object(u.jsxs)("p",{children:[" Now that we have it, lets try it for some point and function. Lets try ",Object(u.jsx)(d.a,{className:"math",math:"x=2"})," in the function ",Object(u.jsx)(d.a,{className:"math",math:"f(x) = x^2"}),"."]}),Object(u.jsxs)("p",{children:[" Lets start out by substituting what we just said would be our example, ",Object(u.jsx)(d.a,{className:"math",math:"x=2"})," and ",Object(u.jsx)(d.a,{className:"math",math:"f(x) = x^2"}),", then do just a bit of algebra."]}),Object(u.jsx)(d.a,{className:"math",math:"\\frac{f(2+h)-f(2)}{h} = \\frac{(h+2)^2 - 2^2}{h} = \\frac{h^2+4h+4 - 4}{h}",block:!0}),Object(u.jsx)("p",{children:" The fours cancel out, and we are left with: "}),Object(u.jsx)(d.a,{className:"math",math:"\\frac{h^2+4h}{h}",block:!0}),Object(u.jsx)("p",{children:" Looking at this equation we can see that it is a pretty typical rational equation, dividing by the variable. This means there will always be a removable discontinuity at h = 0, because we can't divide by 0."}),Object(u.jsx)("p",{children:" As long as we remember that, we can cancel out the h."}),Object(u.jsx)(d.a,{className:"math",math:"\\frac{h^2+4h}{h} = h+4",block:!0}),Object(u.jsxs)("p",{children:[" This is the equation for the calculated slope of ",Object(u.jsx)(d.a,{className:"math",math:"f(x) = x^2  \\; at \\; x=2"})," based on how far away the second point is. We can graph it with the discontinuity: "]}),Object(u.jsx)(z,{fn:"x+4",graphRoot:"discontinuity1",discontinuity:0}),Object(u.jsx)("p",{children:" Wait. Now that we have graphed it, does this remind us of anything? If we have any experience with discontinuities, we know how to find the what the value of x=0 would be without the discontinuity. We take the limit! "}),Object(u.jsx)("p",{children:" The expected value at the point is just the limit of this equation, h+4, as h (the distance between points) goes to 0. We find out that the slope is 4, which is exactly the line our ball follows! "}),Object(u.jsx)(P,{options:C}),Object(u.jsx)(d.a,{className:"math",math:"m \\: = \\: 4 = \\:  \\frac{\\color{#4682b4} 12 \\: \\color{#000} - \\: \\color{#b47846} 8}{\\color{#4682b4}3 \\: \\color{#000} - \\: \\color{#b47846} 2}",block:!0}),Object(u.jsx)("p",{children:" This property isn't unique to x^2. For any function, as h gets closer to 0, we can see that our secant line approximates the true tangent more closely."}),Object(u.jsx)(M,{fn:"x^2",h:5,x:0,graphRoot:g,options:S}),Object(u.jsxs)("div",{className:"keyTakeaway",children:[Object(u.jsx)("h2",{className:"takeawaytitle",children:" Key Takeaway - Limit Definition of Derivative "}),Object(u.jsx)("p",{children:" So, the full equation would be: "}),Object(u.jsx)(d.a,{className:"math",math:"\\lim_{h \\to 0} \\frac{f(x+h) - f(x)}{h}",block:!0}),Object(u.jsx)("p",{children:" This is the limit definition of the derivative. "})]}),Object(u.jsx)("p",{children:" Let\u2019s summarize how we got here. We started off with our usual slope equation: "}),Object(u.jsx)(d.a,{className:"math",math:"\\frac{y_2 - y_1}{x_2 - x_1}",block:!0}),Object(u.jsx)("p",{children:" After playing around with it a little, we found that the closer the two points got to each other, the closer their line got to the line of our hypothetical ball. "}),Object(u.jsx)(V,{fn:"2x^2 + 3",derivative:"4x",secantDist:5,options:D,startX:-10,endX:10,tangentX:2,ticks:500,graphRoot:w}),Object(u.jsx)("p",{children:" We realized that this approach wouldn\u2019t really work to find the exact point because we would divide by zero when the points became the same. However, when we graphed the function of the slope, we could see that this division by zero was really just a removable discontinuity! "}),Object(u.jsx)("p",{children:" Because of this, we could take the limit to find what the value normally would be, and we created our derivative function! "}),Object(u.jsxs)("div",{className:"keyTakeaway",children:[Object(u.jsx)("h2",{className:"takeawaytitle",children:" Key Takeaway - Limit Definition of Derivative "}),Object(u.jsx)(d.a,{className:"math",math:"\\lim_{h \\to 0} \\frac{f(x+h) - f(x)}{h}",block:!0})]}),Object(u.jsx)("p",{children:" Even though it looks a little complicated, its important to remember that the whole thing is just an excuse to push the two points as close together as possible. The limit, the function notation, all of it just helps us to push the points as close together as we can. "}),Object(u.jsx)("p",{children:" So, what can we do with our new equation? "}),Object(u.jsx)("p",{children:" We can use it to find the slope at a specific point like we just did, but we can also use it to find a function. "}),Object(u.jsx)("p",{children:" If we substitute x as a variable instead of as a specific number, we can do a little algebra, and find the function for the slope for every point in the previous equation."}),Object(u.jsxs)("p",{children:[" Let's try it for ",Object(u.jsx)(d.a,{className:"math",math:"f(x) = x^2"})]}),Object(u.jsx)(d.a,{className:"math",math:"\\lim_{h \\to 0} \\frac{f(x+h) - f(x)}{h}",block:!0}),Object(u.jsx)("p",{children:" First we'll take our original equation, then substitute a few things: "}),Object(u.jsx)(d.a,{className:"math",math:"\\lim_{h \\to 0} \\: \\frac{(x+h)^2 - x^2}{h}",block:!0}),Object(u.jsx)("p",{children:" Next we expand the squared parentheses: "}),Object(u.jsx)(d.a,{className:"math",math:"\\lim_{h \\to 0} \\: \\frac{x^2 +2xh + h^2 - x^2}{h}",block:!0}),Object(u.jsxs)("p",{children:[" The postive and negative ",Object(u.jsx)(d.a,{className:"math",math:"f(x) = x^2"})," cancel each other out. "]}),Object(u.jsx)(d.a,{className:"math",math:"\\lim_{h \\to 0} \\: \\frac{2xh + h^2}{h}",block:!0}),Object(u.jsx)("p",{children:" We can divide by h because each term in the numerator has an h, and we can cancel the h in each of them out."}),Object(u.jsx)(d.a,{className:"math",math:"\\lim_{h \\to 0} \\: 2x + h",block:!0}),Object(u.jsx)("p",{children:" Lastly, we just substitute 0 for h. Adding 0 to x does nothing, so we're just left with:"}),Object(u.jsx)(d.a,{className:"math",math:"2x",block:!0}),Object(u.jsx)("p",{children:" This equation fits with what we just did! This equation gives us a slope of 4 when x=2, which is exactly what we found earlier. "}),Object(u.jsx)(E,{options:q,tangentX:2}),Object(u.jsxs)("p",{children:[" We can try one more just to prove the relation: ",Object(u.jsx)(d.a,{className:"math",math:"4x^3-2x^2-7x+2"})," "]}),Object(u.jsx)("p",{children:" Again, we first take our original equation: "}),Object(u.jsx)(d.a,{className:"math",math:"\\lim_{h \\to 0} \\frac{f(x+h) - f(x)}{h}",block:!0}),Object(u.jsx)("p",{children:" Then substitute (this one's a little longer): "}),Object(u.jsx)(d.a,{className:"math",math:"\\lim_{h \\to 0} \\: \\frac{[4(x+h)^3 - 2(x+h)^2 - 7(x+h) + 2] - [4x^3 - 2x^2 - 7x + 2]}{h}",block:!0}),Object(u.jsx)("p",{children:" Now we have to expand the cubes and squares: "}),Object(u.jsx)(d.a,{className:"math",math:"\\lim_{h \\to 0} \\: \\frac{[4x^3 + 12x^2h + 12xh^2 + 4h^3 - 2x^2 - 4xh - 2h^2 - 7x - 7h + 2] - [4x^3 - 2x^2 - 7x + 2]}{h}",block:!0}),Object(u.jsx)("p",{children:" We can finally start canceling out: "}),Object(u.jsx)(d.a,{className:"math",math:"\\lim_{h \\to 0} \\: \\frac{[12x^2h + 12xh^2 + 4h^3 - 4xh - 2h^2 - 7h]}{h}",block:!0}),Object(u.jsx)("p",{children:" Now, cancel the h: "}),Object(u.jsx)(d.a,{className:"math",math:"\\lim_{h \\to 0} \\: [12x^2 + 12xh + 4h^2 - 4x - 2h - 7]",block:!0}),Object(u.jsx)("p",{children:" And finally, we substitute 0 for h: "}),Object(u.jsx)(d.a,{className:"math",math:"12x^2 + 0 + 0 - 4x - 0 - 7 = 12x^2 - 4x - 7",block:!0}),Object(u.jsx)(E,{options:W,tangentX:2}),Object(u.jsx)("p",{children:" It is amazing that this works.  "}),Object(u.jsx)("p",{children:" The derivative is the foundation of higher mathematics and physics, and it is really cool that it really is just pushing two points as close together as they will go."}),Object(u.jsxs)("div",{className:"keyTakeaway",children:[Object(u.jsx)("h2",{className:"takeawaytitle",children:" Key Takeaway - Limit Definition of Derivative "}),Object(u.jsx)(d.a,{className:"math",math:"\\lim_{h \\to 0} \\frac{f(x+h) - f(x)}{h}",block:!0}),Object(u.jsx)("p",{children:" Calculus can be really complex. There are millions of rules and theorems to remember. It's enough to make you go insane. Just remember, it sometimes is as easy as just pushing two things together as hard as you can."})]})]}),document.getElementById("root")),l(console.log)}},[[182,1,2]]]);
//# sourceMappingURL=main.04b9cd18.chunk.js.map